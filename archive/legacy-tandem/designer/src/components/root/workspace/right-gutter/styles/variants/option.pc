import "../../../../../inputs/switch/view.pc" as imp0
import "../../../../../atoms/view.pc" as imp1
import "../../../../../../icons/view.pc" as imp2
import "../../../../../../global.pc" as imp3


/**
 * @bounds(left: 410, top: 267, right: 730, bottom: 293)
 */
public component VariantOption {
  script (src: "./option-controller.tsx")
  variant on
  variant alt
  variant hasTrigger trigger { true }
  variant triggered
  render div {
    style {
      box-sizing: border-box
      padding-left: 12px
      padding-top: 6px
      padding-right: 8px
      padding-bottom: 6px
    }
    override switch {
      variant on trigger { on }
      variant on trigger { alt }
    }
    div element1 {
      style {
        box-sizing: border-box
        display: flex
        align-items: center
      }
      imp0.Switch switch {
        style {
          margin-right: 8px
        }
        override {
        }
        override dot {
          style {
          }
        }
      }
      div input {
        style {
          box-sizing: border-box
          border-radius: 2px
          display: flex
          flex-grow: 1
          justify-content: space-between
          align-items: center
        }
        slot input2 {
          text label "Variant" {
            style extends imp1.baseFont {
            }
          }
        }
      }
      imp2.BoltIcon boltIcon {
        style {
          display: none
          color: var(imp3.blue1)
        }
        style variant hasTrigger {
          display: block
          height: 12px
          color: var(imp3.blackTransparent)
        }
        style variant triggered {
          display: block
          height: 12px
          color: var(imp3.blue1)
        }
      }
      imp2.ResetIcon resetButton {
        style {
          display: none
          height: 10px
          position: relative
          top: 3px
          cursor: pointer
        }
      }
    }
  }
}

/**
 * @bounds(left: 412, top: 320, right: 732, bottom: 346)
 */
VariantOption variantOption {
  override {
    variant triggered trigger { true }
  }
}
