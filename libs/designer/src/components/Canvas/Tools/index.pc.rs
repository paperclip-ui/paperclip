/**
 * !! This file is AUTO GENERATED by the Paperclip Yew compiler.
 */

use yew::prelude::*;
use yew::{function_component, Children, html, Properties, Callback, MouseEvent};

#[derive(Properties, PartialEq)]
pub struct ToolsProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
    pub onClick: ,
    pub onDoubleClick: ,
    pub onDragEnter: ,
    pub onDragOver: ,
    pub onDrop: ,
    pub onMouseDown: ,
    pub onMouseLeave: ,
    pub onMouseMove: ,
    pub onMouseUp: ,
    pub onWheel: ,
    pub style: ,
}

#[function_component]
pub fn Tools(props: &ToolsProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_Tools-acb77914-49", scope_class_name)
        } else {
            "_Tools-acb77914-49".to_string()
        }}>
            <div class={"_Tools-acb77914-48"} onClick={props.onClick.clone()} onDoubleClick={props.onDoubleClick.clone()} onDragEnter={props.onDragEnter.clone()} onDragOver={props.onDragOver.clone()} onDrop={props.onDrop.clone()} onMouseDown={props.onMouseDown.clone()} onMouseLeave={props.onMouseLeave.clone()} onMouseMove={props.onMouseMove.clone()} onMouseUp={props.onMouseUp.clone()} onWheel={props.onWheel.clone()} style={props.style.clone()}>
                { for props.children.iter() }
            </div>
            
        </div>
    }
}

