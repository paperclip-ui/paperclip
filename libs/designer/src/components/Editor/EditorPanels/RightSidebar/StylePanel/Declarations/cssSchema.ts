import { memoize } from "@paperclip-ui/common";
import { css, schema } from "./types";
import { uniq } from "lodash";

const defaultOptions: schema.Field<css.Input> = {
  input: { type: css.InputType.Raw },
};

export const cssSchema: schema.Map<css.Input> = [
  {
    name: "position",
    group: "layout",

    input: {
      name: "left",
      type: css.InputType.Enum,
      options: ["relative", "absolute", "static", "fixed"],
    },
  },
  {
    name: "left",
    group: "layout",

    input: { name: "left", type: css.InputType.Unit },
  },
  {
    name: "border-radius",
    group: "style",

    input: { name: "left", type: css.InputType.Unit },
  },
  {
    name: "top",
    group: "layout",

    input: { name: "height", type: css.InputType.Unit },
  },
  {
    name: "width",
    group: "layout",

    input: { name: "width", type: css.InputType.Unit },
  },
  {
    name: "height",
    group: "layout",

    input: { name: "height", type: css.InputType.Unit },
  },

  // Padding
  { name: "padding-left", alias: "padding" },
  { name: "padding-top", alias: "padding" },
  { name: "padding-right", alias: "padding" },
  { name: "padding-bottom", alias: "padding" },
  {
    name: "padding",
    group: "layout",

    join: {
      padding: [
        "padding-left",
        "padding-right",
        "padding-top",
        "padding-bottom",
      ],
    },
    input: { name: "padding", type: css.InputType.Unit },
  },

  { name: "margin-left", alias: "margin" },
  { name: "margin-right", alias: "margin" },
  { name: "margin-top", alias: "margin" },
  { name: "margin-bottom", alias: "margin" },
  {
    name: "margin",
    group: "layout",

    join: {
      margin: ["margin-left", "margin-right", "margin-top", "margin-bottom"],
    },
    input: { name: "margin", type: css.InputType.Unit },
  },
  {
    name: "box-sizing",
    group: "layout",

    input: {
      name: "box-sizing",
      type: css.InputType.Enum,
      options: ["border-box", "content-box"],
    },
  },
  {
    name: "display",
    group: "layout",

    input: {
      name: "display",
      type: css.InputType.Enum,
      // https://www.w3schools.com/cssref/pr_class_display.php
      options: [
        "inline",
        "block",
        "contents",
        "flex",
        "grid",
        "inline-block",
        "inline-flex",
        "inline-grid",
        "inline-table",
        "list-item",
        "run-in",
        "table",
        "table-caption",
        "table-column-group",
        "table-header-group",
        "table-footer-group",
        "table-row-group",
        "table-cell",
        "table-column",
        "table-row",
        "none",
        "initial",
        "inherit",
      ],
    },
  },
  {
    name: "cursor",

    input: {
      name: "cursor",
      type: css.InputType.Enum,
      // https://developer.mozilla.org/en-US/docs/Web/CSS/cursor
      options: [
        "auto",
        "default",
        "none",
        "context-menu",
        "help",
        "pointer",
        "progress",
        "wait",
        "cell",
        "crosshair",
        "text",
        "vertical-text",
        "alias",
        "copy",
        "move",
        "no-drop",
        "not-allowed",
        "grab",
        "grabbing",
        "all-scroll",
        "col-resize",
        "row-resize",
        "n-resize",
        "e-resize",
        "s-resize",
        "ne-resize",
        "nw-resize",
        "se-resize",
        "sw-resize",
        "ew-resize",
        "ns-resize",
        "nesw-resize",
        "nwsw-resize",
        "nwse-resize",
        "zoom-in",
        "zoom-out",
      ],
    },
  },
  {
    name: "justify-content",
    group: "layout",

    input: {
      name: "justify-content",
      type: css.InputType.Enum,
      options: ["space-between"],
    },
  },
  {
    name: "align-items",
    group: "layout",

    input: {
      name: "display",
      type: css.InputType.Enum,
      options: ["flex-start", "flex-end", "center", "baseline", "stretch"],
    },
  },
  {
    name: "flex-direction",
    group: "layout",

    input: {
      name: "display",
      type: css.InputType.Enum,
      options: ["row", "column"],
    },
  },
  {
    name: "flex-wrap",
    group: "layout",

    input: {
      name: "display",
      type: css.InputType.Enum,
      options: ["nowrap", "wrap", "wrap-reverse", "inherit"],
    },
  },
  {
    name: "gap",
    group: "layout",

    input: { name: "gap", type: css.InputType.Unit },
  },

  {
    name: "font-family",
    group: "typography",

    input: { name: "font-family", type: css.InputType.Enum, options: [] },
  },
  {
    name: "font-size",
    group: "typography",

    input: { name: "font-size", type: css.InputType.Unit },
  },
  {
    name: "color",
    group: "typography",

    input: { name: "color", type: css.InputType.Color },
  },

  // Border
  { name: "border-left-width", alias: "border" },
  { name: "border-left-color", alias: "border" },
  {
    name: "border",

    join: {
      "border-width": [
        "border-left-width",
        "border-top-width",
        "border-right-width",
        "border-bottom-width",
      ],
      "border-color": [
        "border-left-color",
        "border-top-color",
        "border-right-color",
        "border-bottom-color",
      ],
      "border-radius": [
        "border-top-left-radius",
        "border-top-right-radius",
        "border-bottom-right-radius",
        "border-bottom-left-radius",
      ],
    },
    input: {
      type: css.InputType.Group,
      inputs: [
        { name: "border-color", type: css.InputType.Color },
        { name: "border-width", type: css.InputType.Unit },
        { name: "border-radius", type: css.InputType.Unit },
      ],
    },
  },

  { name: "background-color", alias: "background" },
  { name: "background-image", alias: "background" },
  { name: "background-repeat", alias: "background" },

  // Background
  {
    name: "background",

    list: true,
    input: { name: "background", type: css.InputType.Color },
  },
  defaultOptions,
];

export const CSS_PROP_NAMES = uniq([
  "color",
  "border",
  "margin",
  "font-style",
  "transform",
  "background-color",
  "align-content",
  "align-items",
  "align-self",
  "all",
  "animation",
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-timing-function",
  "backface-visibility",
  "background",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-repeat",
  "background-size",
  "border",
  "border-bottom",
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-style",
  "border-bottom-width",
  "border-collapse",
  "border-color",
  "border-image",
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "border-left",
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius",
  "border-right",
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-spacing",
  "border-style",
  "border-top",
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-style",
  "border-top-width",
  "border-width",
  "bottom",
  "box-shadow",
  "box-sizing",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "clip-path",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-color",
  "column-rule-style",
  "column-rule-width",
  "column-span",
  "column-width",
  "columns",
  "content",
  "counter-increment",
  "counter-reset",
  "cursor",
  "direction",
  "display",
  "empty-cells",
  "filter",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "font",
  "font-family",
  "font-kerning",
  "font-size",
  "font-size-adjust",
  "font-stretch",
  "font-style",
  "font-variant",
  "font-weight",
  "grid",
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-gap",
  "grid-column-start",
  "grid-gap",
  "grid-row",
  "grid-row-end",
  "grid-row-gap",
  "grid-row-start",
  "grid-template",
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "height",
  "hyphens",
  "justify-content",
  "left",
  "letter-spacing",
  "line-height",
  "list-style",
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin",
  "margin-bottom",
  "margin-left",
  "margin-right",
  "margin-top",
  "max-height",
  "max-width",
  "min-height",
  "min-width",
  "object-fit",
  "object-position",
  "opacity",
  "order",
  "outline",
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-x",
  "overflow-y",
  "padding",
  "padding-bottom",
  "padding-left",
  "padding-right",
  "padding-top",
  "page-break-after",
  "page-break-before",
  "page-break-inside",
  "perspective",
  "perspective-origin",
  "pointer-events",
  "position",
  "quotes",
  "right",
  "scroll-behavior",
  "table-layout",
  "text-align",
  "text-align-last",
  "text-decoration",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-style",
  "text-indent",
  "text-justify",
  "text-overflow",
  "text-shadow",
  "text-transform",
  "top",
  "transform",
  "transform-origin",
  "transform-style",
  "transition",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "user-select",
  "vertical-align",
  "visibility",
  "white-space",
  "width",
  "word-break",
  "word-spacing",
  "word-wrap",
  "writing-mode",
  "z-index",
]);

export const getPropField = memoize((name: string): schema.Field<css.Input> => {
  const options =
    cssSchema.find((option) => option.name === name) || defaultOptions;
  if (options.alias) {
    return getPropField(options.alias);
  }
  return options;
});
