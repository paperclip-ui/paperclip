import "../../../../styles/theme.pc" as theme

public component Knob {
  render svg(onMouseDown: onMouseDown, class: class, style: style) {
    style {
      width: var(--knob-size)
      height: var(--knob-size)
      left: calc(100% * var(--x)/100)
      top: calc(100% * var(--y)/100)
      position: absolute
      transform: translateY(-50%) translateX(-50%)
      border-radius: 1px
    }
    rect {
      style {
        width: var(--knob-size)
        height: var(--knob-size)
        fill: white
        stroke: var(--background)
        stroke-width: 1px
      }
    }
  }
}

public component Overlay {
  render div(onMouseDown: onMouseDown, style: style, onClick: onClick) {
    style extends theme.fontDefault {
      --background: var(--vscode-button-hoverBackground, var(theme.blue01))
      --foreground: var(--vscode-button-foreground, white)
      --knob-size: 7px
      --zoom: 1
      cursor: pointer
      width: 100%
      height: 100%
      position: absolute
      white-space: nowrap
      box-shadow: inset 0px 0px 0px calc(1px / var(--zoom)) var(--background)
    }
    slot knobs
    div {
      style {
         color: var(--foreground)
        font-size: 0.8em
        background: var(--background)
        position: absolute
        top: calc(100% + 8px)
        border-radius: 2px
        padding: 4px 8px
        left: 0px
      }
      slot size
    }
  }
}

/**
 * @bounds(width: 500, height: 500, x: 0, y: 0)
 */
div {
  div {
    style extends theme.centered {
      width: 200px
      height: 200px
      background: rgb(86, 86, 194) 

    }
    Overlay {
      insert knobs {
        Knob(style: "--x: 0; --y: 0")

        Knob(style: "--x: 100; --y: 0")
        Knob(style: "--x: 100; --y: 100")


        Knob(style: "--x: 0; --y: 100")

      }
      insert size {
        text "200 x 200"
      }
    }
  }
}