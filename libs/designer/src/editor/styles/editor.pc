import "./theme.pc" as theme
import "./left-sidebar.pc" as leftSidebar
import "./common.pc" as common

token iconSize var(theme.fontSize03)

component NodeIcon {
  render div
}


component Artboard {
  render div {
    style {
      width: 400px
      height: 300px

      position: absolute
      left: 50%
      top: 50%
      transform: translate(-50%, -50%)
    }
    div {
      style {
        color: var(theme.fontColor01)
        position: absolute
        transform: translateY(calc(-100% - 0.5em))
      }
      slot title
    }
    ArtboardPreview 
  }
}

component ArtboardPreview {
  render div {
    style {
      width: 400px
      height: 300px
      background: white
    }
  }
}

component Canvas {
  render div {
    style {
      flex: 1
      padding: var(theme.space04)
      background: var(theme.gray03)
      position: relative
      overflow: hidden
      position: absolute
      top: 0px
      left: 0px
      width: 100%
      height: 100%
    }
    Artboard {
      insert title {
        text "Or not somddddddddis"
      }
    }
  }
}

component Field {
  render div {
    style {
      display: flex
      gap: var(theme.space03)
      
    }
    div {
      style {
        top: calc(calc(var(theme.space06) / 2) - calc(1em / 2))
        position: relative
        width: 90px
        flex-shrink: 0
        font-size: var(theme.fontSize01)
      }
      slot name {
        
      }
    }
    div {
      style {
        display: flex
        flex-direction: column
        gap: var(theme.space03)
        flex: 1
      }
      slot input
    }
  }
}

component Fields {
  render div {
    style {
      display: flex
      flex-direction: column
      gap: var(theme.space04)

    }
    slot children
  }
}

component MultiSelect {
  render div {
    style extends theme.input {
      display: flex
      gap: var(theme.space02)
      padding: var(theme.space02)

    }
    slot children
  }
}

component MultiSelectItem {
  render div {
    style {
      display: inline-block
      color: var(theme.backgroundSelectedText)
      background: var(theme.backgroundSelected)
      border-radius: var(theme.roundedSM)
      padding: 0px var(theme.space03)
      display: flex
      height: 100%
      align-items: center
    }
    slot children
  }
}

component Select {
  render div {
    style extends theme.input {
    }
    div {
      slot children
    }
  }
}

component ColorInput {
  render div {
    style extends theme.input {
      gap: var(theme.space03)
    }
    div {
      style {
        width: 1em
        height: 1em
        background: rgb(134, 86, 86)
        border-radius: var(theme.rounded)
      }
    }
    slot children
  }
}

component EditorPanels {
  render div {
    style {
      display: flex
      flex: 1
      z-index: 3
      font-size: var(theme.fontSize01)
      padding: var(theme.space05)
      gap: var(theme.space05)
      position: relative
      height: 100%
      justify-content: space-between
    }
    slot children
  }
}

component CenterPanels {
  render div {
    style {
      display: flex
      flex: 1
      flex-direction: column
      justify-content: space-between
    }
    Toolbar
  }
}

component ToolbarDivider {
  render div {
    style {
      width: 1px
      border-radius: var(theme.roundedMD)
      height: 100%
      background: var(theme.borderColor)
    }
  }
}

component ToolbarButton {
  variant hovering trigger { ":hover" }
  variant wide trigger { ".wide" }
  render button {
    style extends theme.reset, theme.easeIn {
      padding: 0px
      cursor: pointer
      border-radius: var(theme.roundedMD)
      min-width: var(theme.space07)
      height: var(theme.space07)
    }
    style variant hovering {
      background: var(theme.selectedColor)
    }
    style variant wide {
      width: 200px
    }
    slot children
  }
}

component Zoom {
  render div {
    
    slot children
  }
}

component Toolbar {
  render div {
    style {
      display: flex
      justify-content: center
    }
    div {
      style extends common.panel {
        display: inline-flex
        align-items: center
        padding: var(theme.space03)
        gap: var(theme.space03)
      }
      ToolbarButton {
        div {
          style extends theme.icon {
            -webkit-mask-image: url("./text.svg")
          }
        }
      }
      ToolbarButton {
        div {
          style extends theme.icon {
            -webkit-mask-image: url("./instance3.svg")
            transform: rotate(45deg)
            --size: 1.5em
          }
        }
      }
      ToolbarDivider

      ToolbarButton {
        div {
          style extends theme.icon {
            -webkit-mask-image: url("./component2.svg")
            transform: rotate(45deg)
            --size: 1.5em
          }
        }
      }
      ToolbarDivider
      ToolbarButton(class: "wide") {
        text "100%"
      }
    }
  }
}

component FooterBar {
  render div {
    style extends panel {
      width: 100%
      height: 30px
    }
  }
}

component Editor {
  render div {
    style extends theme.fontDefault {

      width: 100vw
      height: 100vh
      background: var(theme.canvasColor)
    }
    Canvas 
    EditorPanels {
      leftSidebar.LeftSidebar
      CenterPanels
      common.Sidebar {
        common.SidebarPanel {
          common.SidebarPanelContent {
            Field {
              insert name {
                text "Variant"
              }
              insert input {
                MultiSelect {
                  MultiSelectItem {
                    text "mobile"
                  }
                  MultiSelectItem {
                    text "dark"
                  }
                }
              }
            }
          }
        }
        common.SidebarPanel {
          common.SidebarPanelHeader {
            text "Layout"
          }
          common.SidebarPanelContent {
            Fields {
              Field {
                insert name {
                  text "display"
                }
                insert input {
                  Select {
                    text "flex"
                  }
                }
              }
              Field {
                insert name {
                  text "Padding"
                }
                insert input {
                  Select {
                    text "flex"
                  }
                }
              }
              Field {
                insert name {
                  text "Margin"
                }
                insert input {
                  Select {
                    text "12px"
                  }
                }
              }
              Field {
                insert name {
                  text "Position"
                }
                insert input {
                  Select {
                    text "relative"
                  }
                }
              }
              Field {
                insert name {
                  text "Box Sizing"
                }
                insert input {
                  Select {
                    text "border-box"
                  }
                }
              }
            }
          }
        }
        common.SidebarPanel {
          common.SidebarPanelHeader {
            text "Style"
          }
          common.SidebarPanelContent {
            Fields {
              Field {
                insert name {
                  text "Background"
                }
                insert input {
                  ColorInput {
                    text "flex"
                  }
                  Select {
                    text "flex"
                  }
                }
              }
              Field {
                insert name {
                  text "Shadows"
                }
                insert input {
                  Select {
                    text "flex"
                  }
                }
              }
              Field {
                insert name {
                  text "Border"
                }
                insert input {
                  div {
                    style {
                      display: flex
                      flex-direction: column
                      gap: var(theme.space05)
                      opacity: 0.5
                    }
                    Select {
                      text "1px"
                    }
                    Select {
                      text "solid"
                    }
                  }
                }
              }
            }
          }
        }

        common.SidebarPanel {
          common.SidebarPanelHeader {
          }
          common.SidebarPanelContent {
            Fields {
              Field {
                insert name {
                  text "Mixins"
                }
                insert input {
                  Select {
                    text "input"
                  }
                  Select {
                    text "fontDefault"
                  }
                  Select {
                    text "add "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

Editor