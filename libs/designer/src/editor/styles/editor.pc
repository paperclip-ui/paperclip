import "./theme.pc" as theme


token iconSize var(theme.fontSize03)


style fontDefault {
  font-family: sans-serif
  color: #333
  font-size: var(theme.fontSize02)
}

component Sidebar {
  render div {
    style {
      width: 250px
      background: var(theme.gray0)
    }
    slot children
  }
}

component SidebarPanel {
  variant lastChild trigger {
    ":last-child"
  }
  render div {
    style variant lastChild {
      border-bottom: 1px solid red
    }
    slot children
  }
}

component SidebarPanelContent {
  render div {
    style {
      padding: var(theme.space05)
    }
    slot children
  }
}


component TreeNavigation {
  render div {
    TreeNavigationItem {
      TreeNavigationItemHeader {
        override root {
          style {
            --depth: 2
          }
        }
        div {
          style extends theme.icon {
            -webkit-mask-image: url("./chevron.svg")
            transform: rotate(-90deg)
            --size: 12px
          }
        }
        div {
          style extends theme.icon {
            -webkit-mask-image: url("./folder2.svg")
            --size: var(theme.fontSize03)
          }
        }
        text "leaf"
      }
      TreeNavigationItemContent {
        TreeNavigationItem {
          TreeNavigationItemHeader {
            text "Leaf"
          }
        }
      }
    }
  }
}

component TreeNavigationItem {
  render div {
    style {
      font-size: var(theme.fontSize02)
      background: rgb(179, 179, 179)
      border-radius: 3px
    }
    slot children
  }
}
component TreeNavigationItemHeader {
  render div container {
    style {
      --depth: 1
      display: flex
      align-items: center
      gap: var(theme.space02)
      padding: var(theme.space03) var(theme.space05)
      padding-left: calc(var(theme.space05) * var(--depth))
    }
    slot children
  }
}
component TreeNavigationItemContent {
  render div {
    slot children
  }
}

component SidebarHeader {
  render div {
    style {
      display: flex
    }
    slot children
  }
}

component SidebarHeaderButton {
  render div {
    style {
      padding: var(theme.space03) var(theme.space05)
      font-size: var(theme.fontSize01)
      text-align: center
      width: 100%
    }
    slot children
  }
}

component Artboard {
  render div {
    style {
      width: 400px
      height: 300px

      position: absolute
      left: 50%
      top: 50%
      transform: translate(-50%, -50%)
    }
    div {
      style {
        color: rgb(160, 160, 160)
        position: absolute
        transform: translateY(calc(-100% - 0.5em))
      }
      slot title
    }
    ArtboardPreview 
  }
}

component ArtboardPreview {
  render div {
    style {
      width: 400px
      height: 300px
      background: white
    }
  }
}

component Canvas {
  render div {
    style {
      flex: 1
      padding: var(theme.space04)
      background: rgb(57, 57, 57)
      position: relative
    }
    Artboard {
      insert title {
        text "Some canvas"
      }
    }
  }
}

component Editor {
  render div {
    style extends fontDefault {
      display: flex
      width: 100vw
      height: 100vh
      
    }
    Sidebar {
      SidebarHeader {
        SidebarHeaderButton {
          text "Files"
        }
        SidebarHeaderButton {
          text "Layers"
        }
        SidebarHeaderButton {
          text "Assets"
        }
      }
      SidebarPanel {
        SidebarPanelContent {
          TreeNavigation
        }
      }
    }
    Canvas
    Sidebar {
      SidebarHeader {
        SidebarHeaderButton {
          text "Styles"
        }
        SidebarHeaderButton {
          text "Properties"
        }
      }
      SidebarPanel {
        SidebarPanelContent {
          theme.Test {
            text "fsdfsdddd"
          }
        }
      }
    }
  }
}

Editor