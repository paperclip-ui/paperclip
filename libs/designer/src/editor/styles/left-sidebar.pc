import "./common.pc" as common
import "./theme.pc" as theme

public component LeftSidebar {
  render common.Sidebar {    
    LeftSidebarHeader {

    }
    common.SidebarPanel {
      common.SidebarPanelContent {
        FileNavigation
      }
    }
  }
}

component LeftSidebarHeader {
  render div {
    style {
      display: flex
      padding: var(theme.space05)
      padding-bottom: 0px
      font-size: var(theme.fontSize01)
    }
    span {
      text "TodoList.pc"
    }
    div {
    }
  }
}


component LayerIcon {
  variant isComponent
  variant isSlot
  render div {
    style {
      --size: 1.4em
    }
    style variant isComponent extends theme.icon {
      --size: 1.2em
      -webkit-mask-image: url("./component2.svg")
    }
    style variant isSlot extends theme.icon {
      -webkit-mask-image: url("./slot2.svg")
      --size: 1.5em
    }
  }
}

component TreeNavigationItemContent {
  render div {
    slot children
  }
}

component TreeNavigationItem {
  render div {
    style {
      background: var(theme.backgroundSelectedLight)
      border-radius: var(theme.roundedMD)
      
    }
    slot children
  }
}


component TreeNavigationItemHeader {
  variant isContainer
  variant isOpen
  render div root {
    style {
      --depth: 1
      display: flex
      align-items: center
      gap: var(theme.space02)
      padding: var(theme.space03) var(theme.space05)
      padding-left: calc(var(theme.space04) * var(--depth))
    }
    div {
      style variant isContainer extends theme.icon {
        -webkit-mask-image: url("./chevron2.svg")
        opacity: 0.3
        --size: 12px
      }
      style variant isOpen {
        transform: rotate(90deg)
      }
    }
    
    slot children
  }
}

component FileNavigatorItemHeader {
  variant isContainer
  variant isComponent
  variant isSlot
  variant isOpen
  render TreeNavigationItemHeader container {
    override {
      variant isContainer trigger { true }
      variant isOpen trigger { true }
    }
    override root {
      style {
        --depth: 1
      }
      style variant isComponent {
        color: var(theme.componentColor)
      }
      style variant isSlot {
        color: var(theme.slotColor)
      }
    }
    LayerIcon {
      override {
        variant isComponent trigger { isComponent }
        variant isSlot trigger { isSlot }
      }
    }
    slot children
  }
}

component FileNavigation {
  render div {
    TreeNavigationItem {
      FileNavigatorItemHeader {
        override {
          variant isComponent trigger { true }
        }
        override container.root {
          style {
            --depth: 1
          }
        }
        text "Item"
      }
      TreeNavigationItemContent {
        TreeNavigationItem {
          FileNavigatorItemHeader {
            override {
              variant isSlot trigger { true }
            }
            override container.root {
              style {
                --depth: 2
              }
            }
            text "label"
          }
          TreeNavigationItemContent {
            TreeNavigationItem {
              FileNavigatorItemHeader {
                override container.root {
                  style {
                    --depth: 3
                  }
                }
                text "some long description"
              }
            }
        }
        TreeNavigationItem {
          FileNavigatorItemHeader {
            override {
              variant isSlot trigger { true }
            }
            override container.root {
              style {
                --depth: 2
              }
            }
            text "description"
          }
          TreeNavigationItemContent {
            TreeNavigationItem {
              FileNavigatorItemHeader {
                override container.root {
                  style {
                    --depth: 3
                  }
                }
                text "some long description"
              }
            }
          }
        }
      }
    }
  }
}
