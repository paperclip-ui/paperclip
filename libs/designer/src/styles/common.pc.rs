/**
 * !! This file is AUTO GENERATED by the Paperclip Yew compiler.
 */

use yew::prelude::*;
use yew::{function_component, Children, html, Properties, Callback, MouseEvent};

#[path = "theme.pc.rs"]
mod theme;

#[derive(Properties, PartialEq)]
pub struct SidebarProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn Sidebar(props: &SidebarProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_Sidebar-2993b912-34", scope_class_name)
        } else {
            "_Sidebar-2993b912-34".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarPanelProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarPanel(props: &SidebarPanelProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPanel-2993b912-42", scope_class_name)
        } else {
            "_SidebarPanel-2993b912-42".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarSectionProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarSection(props: &SidebarSectionProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarSection-2993b912-59", scope_class_name)
        } else {
            "_SidebarSection-2993b912-59".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct SidebarPanelHeaderProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
fn SidebarPanelHeader(props: &SidebarPanelHeaderProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPanelHeader-2993b912-76", scope_class_name)
        } else {
            "_SidebarPanelHeader-2993b912-76".to_string()
        }}>
            <div class={"_SidebarPanelHeader-2993b912-75"}>
                { for props.children.iter() }
            </div>
            
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct SidebarPanelContentProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
    pub class: String,
}

#[function_component]
fn SidebarPanelContent(props: &SidebarPanelContentProps) -> Html {
    html! {
        <div class={format!("{} {}", props.class.clone(), if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPanelContent-2993b912-95", scope_class_name)
        } else {
            "_SidebarPanelContent-2993b912-95".to_string()
        })}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct SidebarHeaderProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
fn SidebarHeader(props: &SidebarHeaderProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarHeader-2993b912-102", scope_class_name)
        } else {
            "_SidebarHeader-2993b912-102".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct SidebarHeaderButtonProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
fn SidebarHeaderButton(props: &SidebarHeaderButtonProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarHeaderButton-root-2993b912-132", scope_class_name)
        } else {
            "_SidebarHeaderButton-root-2993b912-132".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

