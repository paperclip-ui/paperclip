import "./sidebar.pc" as module
import "./theme.pc" as theme
import "./left-sidebar.pc" as leftSidebar
import "./right-sidebar.pc" as rightSidebar
import "./center-panels.pc" as centerPanels
import "./resource-modal.pc" as assetsModal

token iconSize var(theme.fontSize03)
/**
 * @bounds(x: -36, y: -1211, width: 1024, height: 768)
*/

public component EditorPanels {
    render div {
        style {
            display: flex
            flex: 1
            z-index: 3
            gap: var(theme.space05)
            position: relative
            height: 100%
            justify-content: space-between
            pointer-events: none
        }
        slot children
    }
}

/**
 * @bounds(x: 0, y: 0, width: 1853, height: 1753)
*/

public component Editor {
    render div {
        style extends theme.fontDefault {
            width: 100vw
            height: 100vh
            background: var(theme.canvasColor)
        }
        slot children {
            EditorPanels panels {
                module.SidebarContainer {
                    leftSidebar.LeftSidebarPreview leftSidebar
                }
                centerPanels.Preview centerPanels
                module.SidebarContainer {
                    rightSidebar.RightSidebar rightPanel
                }
            }
            assetsModal.Container
        }
    }
}

public component Artboard {
    render div(style: style) {
        div {
            style {
                color: rgb(236, 236, 236)
                position: absolute
                transform: translateY(calc(-100% - 0.5em))
            }
            slot title
        }
        slot children
    }
}

public component Canvas {
    render div(style: style, onMouseMove: onMouseMove, onScroll: onScroll, onWheelCapture: onWheelCapture, tabIndex: "0") {
        style {
            flex: 1
            overflow: hidden
            position: absolute
            top: 0px
            left: 0px
            width: 100%
            height: 100%
        }
        slot children
    }
}

public component CanvasInner {
    render div(style: style, class: class) {
        style extends canvas {
            width: 100%
            height: 100%
        }
        slot children
    }
}

