/**
 * !! This file is AUTO GENERATED by the Paperclip Yew compiler.
 */

use yew::prelude::*;
use yew::{function_component, Children, html, Properties, Callback, MouseEvent};

#[path = "theme.pc.rs"]
mod theme;

#[path = "left-sidebar.pc.rs"]
mod leftSidebar;

#[path = "common.pc.rs"]
mod common;

#[path = "toolbar.pc.rs"]
mod toolbar;

#[path = "right-sidebar.pc.rs"]
mod rightSidebar;

#[derive(Properties, PartialEq)]
struct NodeIconProps {
    pub __scope_class_name: Option<String>,
}

#[function_component]
fn NodeIcon(props: &NodeIconProps) -> Html {
    html! {
        <div></div>
    }
}

#[derive(Properties, PartialEq)]
struct ArtboardProps {
    pub __scope_class_name: Option<String>,
    pub title: Children,
}

#[function_component]
fn Artboard(props: &ArtboardProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_Artboard-cdba43a9-43", scope_class_name)
        } else {
            "_Artboard-cdba43a9-43".to_string()
        }}>
            <div class={"_Artboard-cdba43a9-41"}>
                { for props.title.iter() }
            </div>
            
            <ArtboardPreview></ArtboardPreview>
            
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct ArtboardPreviewProps {
    pub __scope_class_name: Option<String>,
}

#[function_component]
fn ArtboardPreview(props: &ArtboardPreviewProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_ArtboardPreview-cdba43a9-53", scope_class_name)
        } else {
            "_ArtboardPreview-cdba43a9-53".to_string()
        }}></div>
    }
}

#[derive(Properties, PartialEq)]
struct CanvasProps {
    pub __scope_class_name: Option<String>,
}

#[function_component]
fn Canvas(props: &CanvasProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_Canvas-cdba43a9-82", scope_class_name)
        } else {
            "_Canvas-cdba43a9-82".to_string()
        }}>
            <Artboard title={
                
}></Artboard>
            
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct EditorPanelsProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
fn EditorPanels(props: &EditorPanelsProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_EditorPanels-cdba43a9-102", scope_class_name)
        } else {
            "_EditorPanels-cdba43a9-102".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct CenterPanelsProps {
    pub __scope_class_name: Option<String>,
}

#[function_component]
fn CenterPanels(props: &CenterPanelsProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_CenterPanels-cdba43a9-115", scope_class_name)
        } else {
            "_CenterPanels-cdba43a9-115".to_string()
        }}>
            <toolbar::Toolbar></toolbar::Toolbar>
            
        </div>
    }
}

#[derive(Properties, PartialEq)]
struct FooterBarProps {
    pub __scope_class_name: Option<String>,
}

#[function_component]
fn FooterBar(props: &FooterBarProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_FooterBar-cdba43a9-124", scope_class_name)
        } else {
            "_FooterBar-cdba43a9-124".to_string()
        }}></div>
    }
}

#[derive(Properties, PartialEq)]
struct EditorProps {
    pub __scope_class_name: Option<String>,
}

#[function_component]
fn Editor(props: &EditorProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_Editor-cdba43a9-141", scope_class_name)
        } else {
            "_Editor-cdba43a9-141".to_string()
        }}>
            <Canvas></Canvas>
            
            <EditorPanels>
                <leftSidebar::LeftSidebar></leftSidebar::LeftSidebar>
                
                <CenterPanels></CenterPanels>
                
                <rightSidebar::RightSidebar></rightSidebar::RightSidebar>
                
            </EditorPanels>
            
        </div>
    }
}

