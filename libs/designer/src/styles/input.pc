import "./theme.pc" as theme
import "./common.pc" as common

public component MultiSelectItem {
    render div {
        style {
            display: inline-block
            color: var(theme.backgroundSelectedText)
            background: var(theme.blue02)
            border-radius: var(theme.roundedSM)
            padding: 0px 6px
            font-weight: 500
            display: flex
            height: 100%
            align-items: center
        }
        slot children
    }
}

public component Select {
    render div {
        style {
            display: flex
            flex-direction: column
            gap: var(theme.space03)
        }
        div input {
            style extends theme.input {
                display: flex
                justify-content: space-between
            }
            div {
                slot value
            }
            div {
                style  extends theme.icon {
                    --size: 1em
                    -webkit-mask-image: url("./chevron2.svg")
                    transform: rotate(90deg)
                }
            }
        }
        div menuContainer {
            slot menu
        }
    }
}

public component SelectMenu {
    render div {
        style {
            background: var(theme.inputBackground)
            border-radius: var(theme.rounded)
            width: 100%
        }
        slot children
    }
}

public component SelectMenuHeader {
    render div {
        style {
            padding: var(theme.space03)
        }
        slot children
    }
}

public component SelectMenuSearch {
    render TextInput(placeholder: placeholder, value: value) {
        override root {
            style {
                background: var(theme.inputBackgroun2)
            }
        }
    }
}

public component SelectMenuItem {
    render div {
        style {
            padding: var(theme.space03)
        }
        slot children
    }
}

public component TextInput {
    render input root (value: value, placeholder: placeholder, defaultValue: defaultValue, onKeyPress: onKeyPress, onBlur: onBlur) {
        style extends theme.input {
            width: 100%
        }
    }
}

public component ColorInput {
    render div root {
        style extends theme.input {
            gap: var(theme.space03)
            overflow: hidden
            flex: 1
            width: 100%
        }
        div {
            style {
                width: 1em
                height: 1em
                background: var(--color)
                border-radius: var(theme.rounded)
                flex-shrink: 0
            }
        }
        slot children
    }
}

public component Fields {
    render div {
        style {
            display: flex
            flex-direction: column
            gap: var(theme.space04)
        }
        slot children
    }
}

public component MultiSelect {
    render div {
        style extends theme.input {
            display: flex
            gap: var(theme.space02)
            padding: var(theme.space02)
        }
        slot children
    }
}

public component TokenInput {
    render span {
        style variant isFunction {
            color: rgb(0, 162, 255)
        }
        slot children
    }
}

public component Token {
    variant isFunction trigger {
        ".call"
    }
    variant isPunc trigger {
        ".punc"
    }
    variant isNumber trigger {
        ".number"
    }
    variant isUnit trigger {
        ".unit"
    }
    variant isArithmetic trigger {
        ".arith"
    }
    variant isKeyword trigger {
        ".keyword"
    }
    render span(class: class) {
        style variant isFunction {
            color: rgb(255, 255, 255)
        }
        style variant isKeyword {
            color: rgb(255, 255, 255)
        }
        style variant isPunc {
            color: rgb(255, 255, 255)
        }
        style variant isNumber {
            color: white
        }
        style variant isUnit {
            color: white
        }
        style variant isArithmetic {
            color: rgb(255, 255, 255)
        }
        slot children
    }
}

public component Field {
    render div {
        style {
            display: flex
            gap: var(theme.space03)
            align-items: center
            position: relative
        }
        div {
            style {
                position: relative
                width: 90px
                flex-shrink: 0
                font-size: var(theme.fontSize01)
            }
            slot name
        }
        div {
            style {
                display: flex
                flex-direction: column
                gap: var(theme.space03)
                flex: 1
                overflow: hidden
            }
            slot input
        }
    }
}

public component TokenMenuContent {
    render div(style:style) {
        style {
            display: flex
            align-items: center
            justify-content: space-between
        }
        div {
            style {
                display: flex
                align-items: center
                gap: var(theme.space03)
            }
            div {
                style {
                    width: 1em
                    height: 1em
                    background: var(--color)
                    border-radius: var(theme.rounded)
                }
            }
            slot children
        }
        div {
            style {
                opacity: 0.5
            }
            slot file
        }
    }
}

public component SelectMenuDivider {
    render div {
        style {
            background: var(theme.gray04)
            height: 2px
            width: 100%
        }
    }
}

public component SelectMenuSection {
    render div {
        style {
            background: var(theme.gray04)
            width: 100%
            padding: var(theme.space03) var(theme.space03)
        }
        slot children
        
    }
}

/**
 * @bounds(x: -190, y: 10, width: 298, height: 330)
*/

div {
    style extends theme.fontDefault {
        padding: 20px
        background: rgb(20, 20, 20)
        width: 100vw
        height: 100vh
        position: static
    }
    Select {
        insert value {
            text "Something"
        }
        insert menu {
            SelectMenu {
                SelectMenuItem {
                    text "something"
                }
                SelectMenuItem {
                    text "something"
                }
                SelectMenuItem {
                    text "something"
                }
                SelectMenuSection {
                    text "tokens"
                }
                SelectMenuItem {
                    TokenMenuContent(style: "--color: orange") {
                        text "orange05"
                        insert file {
                            text "theme.pc"
                        }
                    }
                }
                SelectMenuItem {
                    TokenMenuContent(style: "--color: yellow") {
                        text "orange04"
                        insert file {
                            text "theme.pc"
                        }
                    }
                }
                SelectMenuItem {
                    TokenMenuContent(style: "--color: #F60") {
                        text "something"
                        insert file {
                            text "theme.pc"
                        }
                    }
                }
            }
        }
    }
}

