import "./sidebar.pc" as sidebar
import "./theme.pc" as theme
import "./input.pc" as input
import "./styles-panel.pc" as stylesPanel

/**
 * @bounds(x: 1553, y: 1425, width: 437, height: 61)
*/

public component UsedBy {
    render div(onClick: onClick) {
        style {
            color: var(theme.gray02)
            text-align: right
            font-family: var(theme.defaultFontFamily)
            display: flex
            align-items: center
            justify-content: flex-start
            gap: var(theme.space03)
            cursor: pointer
            text-decoration: underline
        }
        slot children {
            text "./some/file.pc âžœ"
        }
    }
}

public component RightSidebar {
    render sidebar.Sidebar {
        slot children
    }
}

/**
 * @bounds(x: -784, y: 1208, width: 901, height: 931)
*/

public component VariantPopup {
    render sidebar.SidebarPopup {
        insert header {
            text "header"
        }
        sidebar.SidebarPopupPanelContent {
            input.Fields {
                input.Field {
                    insert name {
                        text "name"
                    }
                    insert input {
                        input.TextInput(value: "something")
                    }
                }
                input.Field {
                    insert name {
                        text "triggers"
                    }
                    insert input {
                        input.TextInput(value: "'.alt'")
                    }
                }
                input.Field {
                    insert input {
                        input.TextInput(value: "':nth-child(2n)'")
                    }
                }
                input.Field {
                    insert input {
                        input.TextInput(value: "add...")
                    }
                }
            }
        }
    }
}

/**
 * @bounds(x: 1223, y: 394, width: 290, height: 1394)
*/

public component Preview {
    render RightSidebar {
        stylesPanel.Preview
        sidebar.SidebarPanel {
            sidebar.SidebarSection {
                sidebar.SidebarPanelHeader {
                    text "Attributes"
                    div {
                        style extends theme.icon {
                            -webkit-mask-image: url("./plus.svg")
                        }
                    }
                }
                sidebar.SidebarPanelContent {
                    input.Fields {
                        input.Field {
                            insert name {
                                input.Select {
                                    insert value {
                                        text "onClick"
                                    }
                                }
                            }
                            insert input {
                                input.Select(class: "error") {
                                    insert value {
                                        text "onButtonClick"
                                    }
                                }
                            }
                        }
                        input.Field {
                            insert name {
                                input.Select {
                                    insert value {
                                        text "onClick"
                                    }
                                }
                            }
                            insert input {
                                input.Select {
                                    insert value {
                                        text "onButtonClick"
                                    }
                                }
                            }
                        }
                    }
                }
            }
            sidebar.SidebarSection {
                sidebar.SidebarPanelContent {
                    input.Fields {
                        input.Field {
                            insert name {
                                text "Logic"
                            }
                            insert input {
                                input.TextInput(value: "./script.ts")
                            }
                        }
                        input.Field {
                            insert name {
                                text "Variants"
                                VariantPopup {
                                    style {
                                        display: none
                                    }
                                }
                            }
                            insert input {
                                input.ListItemInput(class: "removable") {
                                    text "isHover"
                                }
                            }
                        }
                        input.Field {
                            insert input {
                                input.AddListItemButton
                            }
                        }
                    }
                }
            }
            sidebar.SidebarSection {
                sidebar.SidebarPanelHeader {
                    text "Used by"
                }
                sidebar.SidebarPanelContent {
                    input.Fields {
                        UsedBy {
                            insert children {
                                text "./another/file.pc"
                            }
                        }
                        UsedBy {
                            insert children {
                                text "./another/file.pc"
                            }
                        }
                        UsedBy {
                            insert children {
                                text "./another/file.pc"
                            }
                        }
                        UsedBy {
                            insert children {
                                text "./another/file.pc"
                            }
                        }
                    }
                }
            }
        }
    }
}

