/**
 * !! This file is AUTO GENERATED by the Paperclip Yew compiler.
 */

use yew::prelude::*;
use yew::{function_component, Children, html, Properties, Callback, MouseEvent};

#[path = "theme.pc.rs"]
mod theme;

#[derive(Properties, PartialEq)]
pub struct SidebarProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn Sidebar(props: &SidebarProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_Sidebar-root-35e5e68d-37", scope_class_name)
        } else {
            "_Sidebar-root-35e5e68d-37".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarPanelProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarPanel(props: &SidebarPanelProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPanel-35e5e68d-45", scope_class_name)
        } else {
            "_SidebarPanel-35e5e68d-45".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarSectionProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarSection(props: &SidebarSectionProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarSection-root-35e5e68d-62", scope_class_name)
        } else {
            "_SidebarSection-root-35e5e68d-62".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarPanelHeaderProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarPanelHeader(props: &SidebarPanelHeaderProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPanelHeader-35e5e68d-79", scope_class_name)
        } else {
            "_SidebarPanelHeader-35e5e68d-79".to_string()
        }}>
            <div class={"_SidebarPanelHeader-35e5e68d-78"}>
                { for props.children.iter() }
            </div>
            
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarPanelContentProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
    pub class: String,
}

#[function_component]
pub fn SidebarPanelContent(props: &SidebarPanelContentProps) -> Html {
    html! {
        <div class={format!("{} {}", props.class.clone(), if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPanelContent-35e5e68d-98", scope_class_name)
        } else {
            "_SidebarPanelContent-35e5e68d-98".to_string()
        })}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarHeaderProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarHeader(props: &SidebarHeaderProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarHeader-35e5e68d-105", scope_class_name)
        } else {
            "_SidebarHeader-35e5e68d-105".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarHeaderButtonProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarHeaderButton(props: &SidebarHeaderButtonProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarHeaderButton-root-35e5e68d-135", scope_class_name)
        } else {
            "_SidebarHeaderButton-root-35e5e68d-135".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarPopupProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
    pub header: Children,
}

#[function_component]
pub fn SidebarPopup(props: &SidebarPopupProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPopup-35e5e68d-174", scope_class_name)
        } else {
            "_SidebarPopup-35e5e68d-174".to_string()
        }}>
            <div class={"_SidebarPopup-35e5e68d-171"}>
                { for props.header.iter() }
                <div>
                    
                </div>
                
            </div>
            
            <div>
                { for props.children.iter() }
            </div>
            
        </div>
    }
}

#[derive(Properties, PartialEq)]
pub struct SidebarPopupPanelContentProps {
    pub __scope_class_name: Option<String>,
    #[prop_or_default]
    pub children: Children,
}

#[function_component]
pub fn SidebarPopupPanelContent(props: &SidebarPopupPanelContentProps) -> Html {
    html! {
        <div class={if let Some(scope_class_name) = &props.__scope_class_name {
            format!("{} {}", "_SidebarPopupPanelContent-35e5e68d-182", scope_class_name)
        } else {
            "_SidebarPopupPanelContent-35e5e68d-182".to_string()
        }}>
            { for props.children.iter() }
        </div>
    }
}

