import "./decl-suggestion.pc" as module1
import "./token-input.pc" as module
import "./color-picker.pc" as imp2
import "./button.pc" as imp1
import "./menu.pc" as imp
import "./sidebar.pc" as sidebar
import "./theme.pc" as theme
import "./input.pc" as input
import "./etc.pc" as etc

/**
 * @bounds(x: 298, y: -131, width: 281, height: 44)
*/

public component InheritedDeclInfo {
    variant hovering trigger {
        ".hovering"
        ":hover"
    }
    render div inheritedDeclInfo {
        style variant hovering {
            padding: var(theme.space03)
            background: var(theme.gray04)
            display: flex
            justify-content: space-between
        }
        style extends theme.fontDefault {
            padding: var(theme.space03)
            display: flex
            text-overflow: ellipsis
            white-space: nowrap
            overflow: hidden
            justify-content: space-between
        }
        div ownerName {
            style {
                display: flex
                align-items: center
                gap: var(theme.space02)
            }
            div {
                style extends theme.icon {
                    mask-image: url("./group.svg")
                }
            }
            text "mixin name"
        }
        div value {
            style {
                opacity: 0.5
            }
            text unnamed "rgba(0 0, 0, 0.3)"
        }
    }
}

/**
 * @bounds(x: 633, y: -467, width: 355, height: 254)
*/

public component DeclInheritanceInfo {
    render div container {
        style {
            display: inline-block
            position: relative
        }
        slot children {
            DeclName {
                insert children {
                }
            }
        }
        div card {
            style variant hovering {
                left: 50%
                min-width: 200px
                width: 200px
            }
            div header {
                style {
                    padding: var(theme.space03)
                    font-weight: 600
                }
                text "This value comes from:"
            }
            div list {
                InheritedDeclInfo {
                    override {
                        variant hovering trigger {
                            true
                        }
                    }
                }
                InheritedDeclInfo {
                    override {
                        variant hovering
                    }
                }
                InheritedDeclInfo {
                    override {
                        variant hovering
                    }
                }
            }
            div arrow {
                style {
                    background-color: var(theme.popupBackgroundColor)
                    width: 5px
                    height: 5px
                    position: absolute
                    left: 50%
                    top: -3px
                    transform: translateX(-50%) rotate(45deg)
                    pointer-events: none
                    border: 1px solid var(theme.borderColor)
                    border-right: none
                    border-bottom: none
                }
            }
            style extends theme.fontDefault, theme.popup {
                transform: translateX(-50%)
                position: absolute
                border-radius: var(theme.roundedMD)
                left: 50%
                width: 200px
            }
        }
    }
}

/**
 * @bounds(x: 1184, y: -293, width: 1024, height: 768)
*/

public component DeclName {
    variant overridden trigger {
        ".overridden"
    }
    variant inherited trigger {
        ".inherited"
    }
    render div(class: class) {
        style variant overridden {
            position: relative
            border-radius: var(theme.roundedSM)
            display: inline-block
            font-family: var(theme.defaultFontFamily)
            color: var(theme.gray0)
            background: rgba(46, 72, 124, 1)
        }
        style variant inherited {
            color: var(theme.gray0)
            background: rgba(121, 41, 119, 1)
        }
        style {
            font-family: var(theme.defaultFontFamily)
            color: var(theme.gray0)
            display: inline-block
            border-radius: var(theme.roundedSM)
            padding: var(theme.space01)
            position: relative
        }
        slot children {
            text "display"
        }
    }
}

/**
 * @bounds(x: 0, y: 0, width: 271, height: 768)
*/

public component Preview {
    render sidebar.SidebarPanel {
        style {
            font-family: var(theme.defaultFontFamily)
            color: var(theme.gray0)
        }
        sidebar.SidebarSection {
            sidebar.SidebarPanelContent {
                input.Field {
                    insert name {
                        text "Variant"
                    }
                    insert input {
                        input.MultiSelect {
                            input.MultiSelectItem {
                                text "mobile"
                            }
                            input.MultiSelectItem {
                                text "dark"
                            }
                            input.MultiSelectItem {
                                text "another variant"
                            }
                            input.MultiSelectTextInput
                        }
                    }
                }
            }
        }
        sidebar.SidebarSection {
            sidebar.SidebarPanelHeader {
                text "Instance"
                etc.PlusButton
            }
            sidebar.SidebarPanelContent {
                input.Fields {
                    input.Field {
                        insert name {
                            text "mobile"
                        }
                        insert input {
                            input.RadioInput
                        }
                    }
                    input.Field {
                        insert name {
                            text "dark"
                        }
                        insert input {
                            input.RadioInput {
                                override {
                                    variant on trigger {
                                        true
                                    }
                                }
                            }
                        }
                    }
                    input.Field {
                        insert name {
                            text "asupperlongpropthatneedstrimming"
                        }
                        insert input {
                            input.RadioInput {
                                override {
                                    variant on trigger {
                                        true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        sidebar.SidebarSection {
            sidebar.SidebarPanelHeader {
                text "Layout"
                etc.PlusButton
            }
            sidebar.SidebarPanelContent {
                input.Fields {
                    input.Field {
                        insert name {
                            DeclName(class: "inherited") {
                                override {
                                    variant inherited trigger {
                                        inherited
                                    }
                                }
                            }
                        }
                        insert input {
                            input.Select {
                                insert value {
                                    input.Token(class: "keyword") {
                                        text "flex"
                                    }
                                }
                            }
                        }
                    }
                    input.Field {
                        insert name {
                            DeclName {
                                override {
                                    variant overridden trigger {
                                        true
                                    }
                                }
                                insert children {
                                    text "Padding" {
                                        style variant inherited + overridden {
                                            left: NaNpx
                                            top: NaNpx
                                            position: relative
                                            width: 46px
                                            height: 15px
                                        }
                                    }
                                }
                            }
                        }
                        insert input {
                            input.TextInput(value: "", placeholder: "0px", class: "active")
                        }
                    }
                    input.Field {
                        insert name {
                            DeclName {
                                override {
                                    variant overridden trigger {
                                        true
                                    }
                                }
                                text "Margin"
                            }
                        }
                        insert input {
                            input.TextInput(value: "", placeholder: "0px")
                        }
                    }
                    input.Field {
                        insert name {
                            DeclName {
                                override {
                                    variant overridden trigger {
                                        true
                                    }
                                }
                                text "Position"
                            }
                        }
                        insert input {
                            input.Select {
                                insert value {
                                    input.Token(class: "keyword") {
                                        text "static"
                                    }
                                }
                            }
                        }
                    }
                    input.Field {
                        style {
                            position: relative
                        }
                        insert name {
                            DeclName {
                                override {
                                    variant inherited trigger {
                                        true
                                    }
                                }
                                text "Box Sizing"
                            }
                        }
                        insert input {
                            input.Select {
                                insert value {
                                    input.Token(class: "keyword") {
                                        text "border-box"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        sidebar.SidebarSection {
            sidebar.SidebarPanelHeader {
                text "Style"
                etc.PlusButton
            }
            sidebar.SidebarPanelContent {
                input.Fields {
                    input.Field {
                        insert name {
                            text "Background"
                        }
                        insert input {
                            module.BackgroundTokenInputPreview {
                                override root {
                                    style {
                                        --color: rgb(255, 81, 119)
                                    }
                                }
                                span {
                                    input.Token(class: "call") {
                                        text "rgb"
                                    }
                                    input.Token(class: "punc") {
                                        text "("
                                    }
                                    input.Token(class: "number") {
                                        text "255"
                                    }
                                    input.Token(class: "punc") {
                                        text ", "
                                    }
                                    input.Token(class: "number") {
                                        text "255"
                                    }
                                    input.Token(class: "punc") {
                                        text ", "
                                    }
                                    input.Token(class: "number") {
                                        text "255"
                                    }
                                    input.Token(class: "punc") {
                                        text ")"
                                    }
                                }
                            }
                        }
                    }
                    input.Field {
                        insert input {
                            module.BoxShadowTokenInputPreview {
                                override root {
                                    style {
                                        --color: magenta
                                    }
                                }
                                span {
                                    input.Token(class: "keyword") {
                                        text "magenta"
                                    }
                                }
                            }
                        }
                        insert name {
                            text "box-shadow"
                        }
                    }
                    input.Field {
                        insert name {
                            text "Border"
                        }
                        insert input {
                            input.TextInput(value: "", placeholder: "0px") {
                                text "solid"
                            }
                        }
                    }
                }
            }
        }
        sidebar.SidebarSection {
            sidebar.SidebarPanelContent {
                input.Fields {
                    input.Field {
                        insert name {
                            div {
                                style {
                                    display: flex
                                    align-items: center
                                    gap: var(theme.space02)
                                }
                                div {
                                    style extends theme.icon {
                                        width: 0.8em
                                        height: 0.8em
                                        -webkit-mask-image: url("./group.svg")
                                    }
                                }
                                text "Tokens"
                            }
                        }
                        insert input {
                            input.Select {
                                insert value {
                                    text "input"
                                }
                            }
                        }
                    }
                    input.Field {
                        insert input {
                            input.Select {
                                insert value {
                                    text "fontDefault"
                                }
                            }
                        }
                    }
                    input.Field {
                        insert input {
                            input.Select {
                                insert value {
                                    text "add..."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

/**
 * @bounds(x: 452, y: 107, width: 345, height: 214)
*/

div preview {
    DeclInheritanceInfo {
        style {
            position: absolute
            left: 50%
            transform: translateX(-50%)
        }
    }
}

