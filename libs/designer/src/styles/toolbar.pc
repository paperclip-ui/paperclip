import "./theme.pc" as theme
import "./common.pc" as common


public component ToolbarButton {
  variant hovering trigger { 
    ":hover"
    ".active"
  }
  variant wide trigger { ".wide" }
  variant enabled trigger { ":not(:disabled)" }
  render button(class:class, disabled: disabled, style: style, onClick: onClick) {
    style extends theme.reset, theme.easeIn {
      padding: 0px
      cursor: pointer
      border-radius: var(theme.roundedMD)
      min-width: var(theme.space06)
      height: var(theme.space06)
    }
    style variant hovering + enabled {
      background: var(theme.selectedColor)
    }
    style variant wide {
      padding-left: var(theme.space03)
      padding-right:var(theme.space03)
    }
    style variant wide {
      padding-left: var(theme.space03)
      padding-right:var(theme.space03)
    }
    slot children
  }
}

public component ToolbarIcon {
  variant isText trigger { ".text" }
  variant isElement trigger { ".element" }
  variant isComponent trigger { ".component" }
  variant isAsset trigger { ".asset" }
  render div(class: class) {
    style extends theme.icon
    style variant isText {
      -webkit-mask-image: url("./text.svg")
      --size: 0.9em
    }
    style variant isElement {
      -webkit-mask-image: url("./instance3.svg")
      transform: rotate(45deg)
      --size: 1.2em
    }
    style variant isComponent {
       -webkit-mask-image: url("./component2.svg")
       --size: 1.2em
    }
    style variant isAsset {
      -webkit-mask-image: url("./image3.svg")
      --size: 1.2em
    }
  }
}

component Zoom {
  render div {
    slot children
  }
}

public component ToolbarDivider {
  render div {
    style {
      width: 1px
      border-radius: var(theme.roundedMD)
      height: 100%
      background: var(theme.borderColor)
    }
  }
}


public component Toolbar {
  render div {
    style {
      display: flex
      justify-content: center
      padding: var(theme.space05)
      pointer-events: all
    }
    div {
      style extends common.panel {
        display: inline-flex
        align-items: center
        padding: var(theme.space02)
        gap: var(theme.space03)
      }
      slot children
    }
  }
}

public component Preview {
  render Toolbar {
      ToolbarButton {
        ToolbarIcon(class: "text")
      }
      ToolbarButton {
        ToolbarIcon(class: "element")
      }
      ToolbarDivider
      ToolbarButton {
        ToolbarIcon(class: "component")
      }
      ToolbarButton {
        ToolbarIcon(class: "asset")
      }
      ToolbarDivider
      ToolbarButton(class: "wide") {
        text "100%"
      }
  }
}