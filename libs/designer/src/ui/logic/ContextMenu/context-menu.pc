import "ui/theme.pc" as theme
import "../../theme.pc" as imp
import "../../menu.pc" as menu

/**
 * @frame(x: 513, y: -909, width: 515, height: 326)
*/
public component ContextMenu {
    script(src: "./controller.tsx", target: "react", name: "ContextMenu")
    render menu.Menu container {
        slot children {
            ContextMenuItem {
                text "Super long item that should be cut"
                insert keyCommand {
                    text "⌥⌘K"
                }
            }
            ContextMenuItem(class: "disabled") {
                text "Wrap in slot"
            }
            ContextMenuDivider
            ContextMenuItem {
                text "Cut"
                insert keyCommand {
                    text "⌘X"
                }
            }
            ContextMenuItem {
                text "Copy"
                insert keyCommand {
                    text "⌘C"
                }
            }
            ContextMenuItem {
                text "Paste"
                insert keyCommand {
                    text "⌘P"
                }
            }
            ContextMenuItem {
                text "Delete"
                insert keyCommand {
                    text "⌫"
                }
            }
        }
    }
}

/**
 * @frame(x: 0, y: 0, width: 465, height: 64)
*/
public component ContextMenuDivider {
    render hr {
        style {
            padding: 0px
            margin: 0px
            border: none
            height: 1px
            background: var(imp.gray03)
        }
    }
}

/**
 * @frame(x: 202, y: -900, width: 263, height: 44)
*/
public component ContextMenuItem {
    variant last trigger {
        ":last-child"
    }
    variant first trigger {
        ":first-child"
    }
    render menu.MenuItem container {
        style {
            display: flex
            gap: var(theme.space03)
        }
        div label {
            style {
                overflow: hidden
                white-space: nowrap
                text-overflow: ellipsis
            }
            slot children {
                text "Context menu item"
            }
        }
        div {
            style {
                opacity: 0.5
                letter-spacing: 0.1em
            }
            slot keyCommand
        }
    }
}
