import "../../../../../theme.pc" as theme

public component Knob {
    variant topLeftBottomRight trigger {
        ".top-left"
        ".bottom-right"
    }
    variant topRightBottomLeft trigger {
        ".top-right"
        ".bottom-left"
    }
    render svg(onMouseDown: onMouseDown, class: class, style: style) {
        style {
            width: var(--knob-size)
            height: var(--knob-size)
            left: calc(100% * var(--x) / 100)
            top: calc(100% * var(--y) / 100)
            position: absolute
            transform: translateY(-50%) translateX(-50%)
            border-radius: 1px
        }
        style variant topLeftBottomRight {
            cursor: nwse-resize
        }
        style variant topRightBottomLeft {
            cursor: nesw-resize
        }
        rect {
            style {
                width: var(--knob-size)
                height: var(--knob-size)
                fill: white
                stroke: var(--background)
                stroke-width: 2px
            }
        }
    }
}

public component Edge {
    variant left trigger {
        ".left"
    }
    variant right trigger {
        ".right"
    }
    variant top trigger {
        ".top"
    }
    variant bottom trigger {
        ".bottom"
    }
    render div(class: class, onMouseDown: onMouseDown) {
        style {
            --size: 3px
            background: transparent
            position: absolute
        }
        style variant left {
            width: var(--size)
            cursor: ew-resize
            height: 100%
        }
        style variant right {
            width: var(--size)
            right: 0px
            cursor: ew-resize
            height: 100%
        }
        style variant bottom {
            cursor: ns-resize
            width: 100%
            right: 0px
            bottom: 0px
            height: var(--size)
        }
        style variant top {
            cursor: ns-resize
            width: 100%
            right: 0px
            top: 0px
            height: var(--size)
        }
    }
}

public component Overlay {
    render div(onMouseDown: onMouseDown, style: style, onClick: onClick) {
        style extends theme.fontDefault {
            --background: var(--vscode-button-hoverBackground, rgb(96, 149, 255))
            --foreground: var(--vscode-button-foreground, white)
            --knob-size: 7px
            --zoom: 1
            cursor: pointer
            width: 100%
            height: 100%
            position: absolute
            white-space: nowrap
            box-shadow: inset 0px 0px 0px calc(1px / var(--zoom)) var(--background)
        }
        slot knobs
        slot edges
        div footer {
            style {
                color: var(--foreground)
                font-size: 0.8em
                background: var(--background)
                position: absolute
                top: calc(100% + 8px)
                border-radius: 2px
                padding: 4px 8px
                left: 0px
            }
            slot size
        }
    }
}

/**
 * @frame(x: 26, y: -2, width: 476, height: 505)
*/
div {
    div {
        style extends theme.centered {
            width: 200px
            height: 200px
            background: rgb(86, 86, 194)
        }
        Overlay {
            insert edges {
                Edge(class: "left")
                Edge(class: "top")
                Edge(class: "right")
                Edge(class: "bottom")
            }
            insert knobs {
                Knob(style: "--x: 0; --y: 0")
                Knob(style: "--x: 100; --y: 0")
                Knob(style: "--x: 100; --y: 100")
                Knob(style: "--x: 0; --y: 100")
            }
            insert size {
                text "200 x 200"
            }
        }
    }
}
