import "./menu.pc" as imp1
import "./logic/SuggestionMenu/ui.pc" as sugg
import "./color-picker.pc" as imp
import "./logic/Sidebar/sidebar.pc" as sidebar
import "./theme.pc" as theme
import "./input.pc" as input
import "./styles-panel.pc" as stylesPanel

/**
 * @frame(x: 1424, y: 1394, width: 140, height: 35)
*/
public component UsedBy {
    render div root {
        style {
            color: var(theme.gray02)
            text-align: right
            font-family: var(theme.defaultFontFamily)
            display: flex
            align-items: center
            justify-content: flex-start
            gap: var(theme.space03)
            cursor: pointer
            text-decoration: underline
        }
        slot children {
            text "./some/file.pc âžœ"
        }
    }
}

/**
 * @frame(x: 1043, y: 478, width: 331, height: 1270)
*/
public component RightSidebar {
    script(src: "./logic/Editor/EditorPanels/RightSidebar/index.tsx", target: "react", name: "RightSidebar")
    render sidebar.SidebarContainer root {
        sidebar.Sidebar {
            slot children {
                stylesPanel.Preview
                sidebar.SidebarPanel {
                    sidebar.SidebarSection {
                        sidebar.SidebarPanelHeader {
                            text "Attributes"
                            div {
                                style extends theme.icon {
                                    -webkit-mask-image: url("./plus.svg")
                                }
                            }
                        }
                        sidebar.SidebarPanelContent {
                            input.Fields {
                                input.Field {
                                    insert name {
                                        input.TextInput(value: "onClick")
                                    }
                                    insert input {
                                        input.TextInput(value: "onClick") {
                                            insert value {
                                                text "onButtonClick"
                                            }
                                        }
                                    }
                                }
                                input.Field {
                                    insert name {
                                        input.TextInput(value: "href") {
                                            insert value {
                                                text "onClick"
                                            }
                                        }
                                    }
                                    insert input {
                                        input.TextInput(value: "http://google.com") {
                                            insert value {
                                                text "onButtonClick"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    sidebar.SidebarSection {
                        sidebar.SidebarPanelContent {
                            input.Fields {
                                input.Field {
                                    insert name {
                                        text "Logic"
                                    }
                                    insert input {
                                        input.TextInput(value: "./script.ts")
                                    }
                                }
                                input.Field {
                                    insert name {
                                        text "Variants"
                                        VariantPopup {
                                            style {
                                                display: none
                                            }
                                        }
                                    }
                                    insert input {
                                        input.ListItemInput(class: "removable") {
                                            text "isHover"
                                        }
                                    }
                                }
                                input.Field {
                                    insert input {
                                        input.AddListItemButton
                                    }
                                }
                            }
                        }
                    }
                    sidebar.SidebarSection {
                        sidebar.SidebarPanelHeader {
                            text "Used by"
                        }
                        sidebar.SidebarPanelContent {
                            input.Fields {
                                UsedBy {
                                    insert children {
                                        text "./another/file.pc"
                                    }
                                }
                                UsedBy {
                                    insert children {
                                        text "./another/file.pc"
                                    }
                                }
                                UsedBy {
                                    insert children {
                                        text "./another/file.pc"
                                    }
                                }
                                UsedBy {
                                    insert children {
                                        text "./another/file.pc"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

/**
 * @frame(x: -207, y: 537, width: 901, height: 931)
*/
public component VariantPopup {
    render sidebar.SidebarPopup {
        insert header {
            text "header"
        }
        sidebar.SidebarPopupPanelContent {
            input.Fields {
                input.Field {
                    insert name {
                        text "name"
                    }
                    insert input {
                        input.TextInput(value: "something")
                    }
                }
                input.Field {
                    insert name {
                        text "triggers"
                    }
                    insert input {
                        input.TextInput(value: "'.alt'")
                    }
                }
                input.Field {
                    insert input {
                        input.TextInput(value: "':nth-child(2n)'")
                    }
                }
                input.Field {
                    insert input {
                        input.TextInput(value: "add...")
                    }
                }
            }
        }
    }
}

/**
 * @frame(x: 3841, y: 76, width: 1024, height: 768)
*/
input.SuggestionMenu

/**
 * @frame(x: 3316, y: 1217, width: 627, height: 768)
*/
imp1.Menu {
    sugg.SuggestionMenuSection {
        insert children {
            text "soemthing"
        }
    }
    sugg.SuggestionMenuItem {
        override {
            variant checked
        }
        insert children {
            div {
                text "something else"
            }
        }
    }
}

