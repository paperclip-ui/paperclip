import "./input.pc" as imp1
import "./theme.pc" as module
import "./utils.pc" as imp

public style token {
    font-family: var(module.defaultFontFamily)
    color: var(module.gray0)
    font-size: var(module.fontSize01)
    display: inline
}

public style tokenPreview {
    font-family: var(module.defaultFontFamily)
    color: var(module.gray0)
    margin: 0px var(module.space01)
    font-size: 11px
    display: inline
}

/**
 * @frame(x: 1146, y: 638, width: 310, height: 24)
*/
public component BoxShadowTokenInputPreview {
    render TokenInput {
        Token(class: "number") {
            text "0"
        }
        Token(class: "unit") {
            text "px"
        }
        Token(class: "space") {
            text " "
        }
        Token(class: "number") {
            text "0"
        }
        Token(class: "unit") {
            text "px"
        }
        Token(class: "space") {
            text " "
        }
        Token(class: "number") {
            text "0"
        }
        Token(class: "unit") {
            text "px"
        }
        Token(class: "space") {
            text " "
        }
        Token(class: "number") {
            text "0"
        }
        Token(class: "unit") {
            text "px"
        }
        Token(class: "space") {
            text " "
        }
        Token(class: "number") {
            text "0"
        }
        Token(class: "unit") {
            text "px"
        }
        ColorTokenPreview(style: "--color: #F00")
        Token(class: "color") {
            text "#F00"
        }
    }
}

/**
 * @frame(x: 699, y: 715, width: 325, height: 53)
*/
public component BackgroundTokenInputPreview {
    render TokenInput {
        ColorTokenPreview(style: "--color: linear-gradient(#F60, #000)")
        Token {
            text "linear-gradient"
        }
        Token(class: "sugar") {
            text "("
        }
        ColorTokenPreview(style: "--color: #F60")
        Token {
            text "#F60"
        }
        Token(class: "sugar") {
            text ","
        }
        ColorTokenPreview(style: "--color: #000")
        Token {
            text "#000"
        }
        Token(class: "sugar") {
            text ")"
        }
    }
}

/**
 * @frame(x: 643, y: 599, width: 381, height: 169)
*/
public component ColorTokenPreview {
    render div(style: style) {
        style extends tokenPreview {
            display: inline-block
            width: 1em
            flex-shrink: 0
            height: 1em
            background: var(--color)
            border-radius: var(module.space01)
        }
    }
}

/**
 * @frame(x: 1147, y: 478, width: 80, height: 57)
*/
public component TokenInput {
    variant active trigger {
        ".active"
        ":focus"
        ":active"
    }
    render div input {
        style extends module.input {
            display: inline-flex
            aling-items: center
        }
        style variant active extends module.inputActive
        slot children {
            Token(style: "--color: orange") {
                insert children {
                    text "space01"
                }
            }
            Token
            Token
        }
    }
}

/**
 * @frame(x: 1159, y: 442, width: 91, height: 20)
*/
public component Token {
    variant active trigger {
        ":active"
        ":focus"
    }
    variant string trigger {
        ".string"
    }
    variant unit trigger {
        ".unit"
    }
    variant sugar trigger {
        ".sugar"
    }
    variant space trigger {
        ".space"
    }
    render div token(class: class, contentEditable: true) {
        style extends token
        style variant active {
            outline: none
        }
        style variant sugar {
            opacity: 0.5
        }
        style variant unit {
            opacity: 0.5
        }
        style variant space {
            width: 2px
        }
        style variant string {
            color: rgb(100, 200, 100)
        }
        slot children {
            text "value"
        }
    }
}

/**
 * @frame(x: 341, y: 410, width: 273, height: 175)
*/
div preview {
    style {
        position: relative
    }
    imp1.Fields {
        imp1.Field {
            insert name {
                text "background"
            }
            insert input {
                BackgroundTokenInputPreview
            }
        }
        insert children {
        }
        imp1.Field {
            insert name {
                text "font-family"
            }
            insert input {
                TokenInput {
                    override {
                        variant active trigger {
                            true
                        }
                    }
                    Token {
                        override {
                            variant sugar
                        }
                        insert children {
                            text "var"
                        }
                    }
                    Token(class: "sugar") {
                        text "("
                    }
                    Token {
                        insert children {
                            text "theme"
                        }
                    }
                    Token(class: "sugar") {
                        text "."
                    }
                    Token {
                        insert children {
                            text "defaultFont"
                        }
                    }
                    Token(class: "sugar") {
                        text ")"
                    }
                }
            }
        }
        imp1.Field {
            insert name {
                text "box-shadow"
            }
            insert input {
                BoxShadowTokenInputPreview
            }
        }
        imp1.Field {
            insert name {
                text "trigger"
            }
            insert input {
                TokenInput {
                    Token(class: "string") {
                        insert children {
                            text "\".test\""
                        }
                    }
                }
            }
        }
    }
}

