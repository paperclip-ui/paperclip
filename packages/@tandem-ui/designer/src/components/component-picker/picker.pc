import "../../global.pc" as imp0
import "./cell.pc" as imp1
import "../inputs/text/view.pc" as imp2
import "../atoms/view.pc" as imp3
import "../inputs/molecules.pc" as imp4
import "../../icons/view.pc" as imp5


/**
 * @bounds(left: 516, top: 579, right: 1448, bottom: 1116)
 */
public component Picker {
  script (src: "./picker-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      width: 400px
      height: 300px
      background: var(imp0.grey2)
      padding: 8px
      border-radius: 2px
      display: flex
      flex-direction: column
      border: 1px solid rgba(0,0,0,0.1)
    }
    Filter filterInput
    div options {
      style {
        box-sizing: border-box
        height: 100%
        width: 100%
        overflow: scroll
      }
      imp1.ComponentOption
      imp1.ComponentOption instance123 {
        style {
        }
      }
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption {
      }
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
      imp1.ComponentOption
    }
  }
}

/**
 * @bounds(left: 519, top: 438, right: 1433, bottom: 461)
 */
public component Filter {
  script (src: "../focus/controller.tsx")
  render imp2.TextInput {
    style {
      width: 100%
      padding: 4px 8px
      border-radius: 2px
      box-sizing: border-box
      margin-bottom: 8px
      border-left: 0px none
      border-top: 0px none
      border-right: 0px none
      border-bottom: 0px none
    }
  }
}

/**
 * @bounds(left: 1675, top: 597, right: 2480, bottom: 1146)
 */
public component ComponentPopdownPicker {
  script (src: "./picker2-controller.tsx")
  variant noComponents trigger {
    true
  }
  render div {
    style extends imp3.defaultShadowStyle {
      box-sizing: border-box
      display: block
      width: 200px
      position: relative
      transform: translateX(-50%)
    }
    imp4.Tooltip tooltip {
      override contentWrapper {
        style {
          padding-left: 0px
          padding-top: 0px
          padding-right: 0px
          padding-bottom: 0px
        }
      }
      insert content {
        div content2 {
          style {
            box-sizing: border-box
            display: flex
            width: 100%
            height: 100%
            flex-direction: column
          }
          div header {
            style {
              padding-left: 12px
              padding-top: 12px
              padding-right: 12px
              padding-bottom: 12px
              flex-shrink: 0
            }
            imp2.TextInput filter (placeholder: "filter")
          }
          div items122 {
            style {
              display: block
              height: 100%
              max-height: 200px
              overflow-y: scroll
            }
            style variant noComponents {
              display: none
            }
            slot items {
              ComponentPickerPopdownItem item1 {
              }
              ComponentPickerPopdownItem item2
              ComponentPickerPopdownItem item3 {
                override {
                  variant hover trigger { true }
                }
              }
              ComponentPickerPopdownItem item4
              ComponentPickerPopdownItem item5 {
              }
              ComponentPickerPopdownItem item6
              ComponentPickerPopdownItem item7 {
              }
              ComponentPickerPopdownItem item8 {
              }
              ComponentPickerPopdownItem item9 {
                override {
                }
              }
              ComponentPickerPopdownItem item10 {
                override {
                  variant alt trigger { true }
                }
              }
              ComponentPickerPopdownItem item11 {
                override {
                }
              }
              ComponentPickerPopdownItem item12 {
                override {
                  variant alt trigger { true }
                }
              }
              ComponentPickerPopdownItem item13
            }
          }
          div noComponents {
            style {
              box-sizing: border-box
              display: none
            }
            style variant noComponents {
              display: block
              padding-left: 12px
              padding-top: 0px
              padding-right: 12px
              padding-bottom: 12px
            }
            text noneFound "No components found." {
              style extends imp3.baseFont {
                text-align: left
                display: block
                font-weight: 600
                margin-bottom: 12px
              }
            }
            text desc "To create one, right click a layer and click" {
              style extends imp3.baseFont {
                text-align: left
                display: inline
              }
            }
            text ctra "\"Convert to Component\"" {
              style extends im3.baseFont {
                text-align: left
                display: inline
                font-weight: 600
              }
            }
            text period "." {
              style extends imp3.baseFont {
                text-align: left
                display: inline-block
              }
            }
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 2519, top: 644, right: 3298, bottom: 694)
 */
public component ComponentPickerPopdownItem {
  variant alt trigger { true }
  variant hover trigger { PseudoElement.Hover }
  variant preselected trigger { true }
  render div {
    style {
      box-sizing: border-box
      display: flex
      padding-left: 12px
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
      align-items: center
      cursor: pointer
    }
    style variant alt {
      background-image: linear-gradient(var(imp0.grey7), var(imp0.grey7))
      display: flex
      align-items: center
    }
    style variant hover {
      background-image: linear-gradient(var(imp0.grey7), var(imp0.grey7))
    }
    style variant preselected {
      background-image: linear-gradient(var(imp0.blue3), var(imp0.blue3))
    }
    imp5.ComponentIcon componentIcon {
      style {
        color: var(imp0.grey3)
        display: block
        height: 12px
      }
      style variant alt {
        color: var(imp0.grey3)
      }
    }
    text componentName "Item14" {
      style extends imp3.baseFont, imp3.nowrapEllipsis {
        margin-left: 6px
        display: block
        width: 100%
        cursor: inherit
      }
    }
  }
}

/**
 * @bounds(left: 72, top: 308, right: 172, bottom: 408)
 */
div element1 {
  style {
    box-sizing: border-box
    display: block
  }
}
