import "../../../global.pc" as imp0
import "../../atoms/view.pc" as imp1
import "../text/view.pc" as imp2
import "../dropdown/view.pc" as imp3


/**
 * @bounds(left: -528, top: 367, right: -98, bottom: 910)
 */
public component ColorPicker {
  script (src: "./picker-controller.tsx")
  variant noSwatches (enabled: [])
  variant gradient (enabled: [true])
  variant noTabs (enabled: [])
  render div {
    style extends imp1.defaultShadowStyle {
      box-sizing: border-box
      background: var(imp0.grey2)
      display: inline-block
      flex-direction: column
      position: relative
      opacity: 1
      text-align: left
      border-top-left-radius: 2px
      border-top-right-radius: 2px
      border-bottom-left-radius: 2px
      border-bottom-right-radius: 2px
      border-left: 1px solid rgba(230, 230, 230, 1)
      border-top: 1px solid rgba(230, 230, 230, 1)
      border-right: 1px solid rgba(230, 230, 230, 1)
      border-bottom: 1px solid rgba(230, 230, 230, 1)
      width: 250px
    }
    div inputs {
      style {
        box-sizing: border-box
        display: block
        padding-left: 12px
        padding-top: 12px
        padding-right: 12px
        padding-bottom: 12px
      }
      Picker hsl {
        style {
          box-sizing: border-box
          position: relative
          height: 120px
          width: 100%
          opacity: 0.991
          border: 0px  rgba(230, 230, 230, 1)
        }
      }
      Picker spectrum {
        style {
          box-sizing: border-box
          position: relative
          height: 12px
          width: 100%
          margin-top: 12px
          border: 0px  var(imp0.grey1)
          opacity: 0.991
        }
        style variant gradient {
          height: 20px
        }
        override grabber {
          style {
            height: 100%
            transform: translateX(-50%)
            border-radius: 2px
            left: 20%
            top: 0
            border: 1px solid var(imp0.grey3)
            width: 12px
          }
          style variant gradient {
            border-top-left-radius: 2px
            border-top-right-radius: 2px
            border-bottom-left-radius: 2px
            border-bottom-right-radius: 2px
          }
        }
      }
      Picker opacity {
        style {
          box-sizing: border-box
          position: relative
          height: 12px
          width: 100%
          margin-top: 12px
          border: 0px  var(imp0.grey1)
          opacity: 0.991
        }
        override grabber {
          style {
            height: 100%
            transform: translateX(-50%)
            border-radius: 2px
            left: 50%
            border: 1px solid var(imp0.grey3)
            width: 12px
          }
          style variant gradient {
            border-top-left-radius: 2px
            border-top-right-radius: 2px
            border-bottom-left-radius: 2px
            border-bottom-right-radius: 2px
          }
        }
      }
      RgbaInput rgbaInput {
        style {
          flex-shrink: 0
          margin-top: 12px
          display: flex
          align-items: center
          width: 100%
        }
      }
    }
    ColorSwatches colorSwatchesInst {
      style {
        box-sizing: border-box
        display: block
        padding-left: 4px
        border-top: 1px solid var(imp0.grey1)
      }
    }
  }
}

/**
 * @bounds(left: 409, top: 539, right: 727, bottom: 611)
 */
public component RgbaInput {
  script (src: "./rgba-input-controller.tsx")
  render div {
    style {
      flex-shrink: 0
      margin-top: 10px
      display: flex
      align-items: center
    }
    text label1 "RGBA" {
      style extends imp1.baseFont {
        font-size: 0.8em
        margin-right: 8px
      }
    }
    imp2.TextInput rInput1 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        margin-right: 8px
        flex: 1
      }
    }
    imp2.TextInput gInput1 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        margin-right: 8px
        flex: 1
      }
    }
    imp2.TextInput bInput {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        margin-right: 8px
        flex: 1
      }
    }
    imp2.TextInput aInput1 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        flex: 1
      }
    }
  }
}

/**
 * @bounds(left: 409, top: 700, right: 713, bottom: 800)
 */
public component HslInput {
  render div {
    style {
      flex-shrink: 0
      margin-top: 10px
      display: flex
      align-items: center
    }
    text label "HSLA" {
      style extends imp1.baseFont {
        margin-right: 8px
      }
    }
    imp2.TextInput rInput2 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        margin-right: 8px
        flex: 1
      }
    }
    imp2.TextInput gInput {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        margin-right: 8px
        flex: 1
      }
    }
    imp2.TextInput aInput2 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        flex: 1
        margin-right: 8px
      }
    }
    imp2.TextInput aInput3 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        flex: 1
      }
    }
  }
}

/**
 * @bounds(left: 411, top: 376, right: 730, bottom: 476)
 */
public component HexInput {
  script (src: "./hex-input-controller.tsx")
  render div {
    style {
      flex-shrink: 0
      margin-top: 10px
      display: flex
      align-items: center
    }
    text label122 "HEX" {
      style extends imp1.baseFont {
        margin-right: 8px
      }
    }
    imp2.TextInput rInput3 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        margin-right: 8px
        flex: 1
      }
    }
  }
}

/**
 * @bounds(left: 987, top: 409, right: 1029, bottom: 459)
 */
public component Grabber {
  render div {
    style {
      border: 1px solid rgba(0,0,0,0.5)
      width: 10px
      height: 10px
      position: absolute
      box-sizing: border-box
      background: transparent
      transform: translate(-50%, -50%)
    }
  }
}

/**
 * @bounds(left: 1105, top: 418, right: 1168, bottom: 453)
 */
public component Slider {
  render Grabber {
    style {
      border: 1px solid rgba(0,0,0,0.5)
      width: 10px
      height: 100%
      position: absolute
      box-sizing: border-box
      background: transparent
      transform: translateX(-50%)
      border-radius: 2px
    }
  }
}

/**
 * @bounds(left: 530, top: 160, right: 630, bottom: 260)
 */
public component Picker {
  script (src: "./canvas-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      position: relative
      height: 100px
      opacity: 0.991
      background: var(imp0.grey0)
      width: 100%
    }
    div canvasContainer {
      style {
        width: 100%
        height: 100%
        position: absolute
        top: 0
        left: 0
        overflow: hidden
        border-radius: 2px
      }
      canvas canvas {
        style extends imp1.defaultBorder {
          width: 100%
          height: 100%
          position: absolute
          left: 0px
        }
      }
    }
    Grabber grabber {
      style {
        border: 1px solid var(imp0.grey3)
        width: 10px
        height: 10px
        position: absolute
        box-sizing: border-box
        background: transparent
        transform: translate(-50%, -50%)
        top: 0px
        border-top-left-radius: 10px
        border-top-right-radius: 10px
        border-bottom-left-radius: 10px
        border-bottom-right-radius: 10px
      }
    }
  }
}

/**
 * @bounds(left: -588, top: 1123, right: -148, bottom: 1223)
 */
public component ColorSwatches {
  script (src: "./color-swatch-controller.tsx")
  variant hasMultipleGroups (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: block
      padding-left: 4px
      padding-top: 4px
      padding-right: 5px
      padding-bottom: 4px
    }
    style variant hasMultipleGroups {
      padding-top: 12px
      padding-right: 12px
      padding-bottom: 12px
      padding-left: 12px
    }
    override {
      variant selected (enabled: [true])
    }
    imp3.Dropdown swatchSourceInput {
      style {
        margin-bottom: 8px
        margin-top: 4px
        display: none
      }
      style variant hasMultipleGroups {
        display: block
      }
    }
    div element1 {
      style {
        box-sizing: border-box
        display: inline-block
        padding-left: 2px
        padding-top: 2px
        padding-right: 2px
        padding-bottom: 2px
      }
      slot content {
        ColorSwatchItem {
          override pill {
            style {
              background: rgba(159, 198, 234, 1)
            }
          }
        }
        ColorSwatchItem {
          override pill {
            style {
              background: rgba(244, 244, 58, 1)
            }
          }
        }
        ColorSwatchItem {
          override pill {
            style {
              background: rgba(95, 88, 227, 1)
            }
          }
        }
        ColorSwatchItem {
          override pill {
            style {
              background: rgba(38, 226, 110, 1)
            }
          }
        }
        ColorSwatchItem instance322 {
          override {
            variant selected (enabled: [true])
          }
          override pill {
            style {
              background: rgba(246, 33, 33, 1)
            }
          }
        }
        ColorSwatchItem {
          style {
            box-sizing: border-box
            display: inline-block
            width: 16px
            height: 16px
            border-radius: 2px
            position: relative
          }
          override pill {
            style {
            }
          }
        }
      }
    }
    div element2 {
      style {
        box-sizing: border-box
        display: inline-flex
        align-items: center
      }
    }
  }
}

/**
 * @bounds(left: -587, top: 1324, right: -487, bottom: 1424)
 */
public component ColorSwatchItem {
  variant selected (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: inline-block
      width: 16px
      height: 16px
      border-radius: 2px
      margin-right: 4px
      padding-left: 2px
      padding-top: 2px
      padding-right: 2px
      padding-bottom: 2px
      position: relative
    }
    style variant selected {
      background: var(imp0.blue1)
      margin-right: 4px
      padding-left: 2px
      padding-top: 2px
      padding-right: 2px
      padding-bottom: 2px
    }
    div pill {
      style {
        box-sizing: border-box
        display: block
        border-radius: 2px
        background: var(imp0.grey1)
        width: 100%
        height: 100%
        cursor: pointer
      }
    }
  }
}

/**
 * @bounds(left: -55, top: 885, right: 619, bottom: 1460)
 */
div preview {
  style {
    opacity: 1
    background-image: linear-gradient(rgba(241, 240, 240, 1), rgba(241, 240, 240, 1))
  }
  ColorPicker {
    style {
      box-sizing: border-box
      background: white
      border-radius: 2px
      border: 1px solid rgba(200, 200, 200, 1)
      display: inline-block
      flex-direction: column
      position: relative
      top: 100px
      left: 100px
    }
    override {
      variant gradient (enabled: [true])
      variant noTabs (enabled: [true])
    }
    override hsl {
      style {
        position: relative
      }
    }
    override colorSwatchesInst.instance322 {
      style {
        background: var(imp0.blue1)
      }
    }
    override spectrum {
      style {
        opacity: 0.991
        height: 10px
      }
    }
  }
}
/**
 * @bounds(left: 264, top: 185, right: 364, bottom: 285)
 */
div element3 {
  style {
    box-sizing: border-box
    display: block
    background: rgba(200, 200, 200, 1)
  }
}
