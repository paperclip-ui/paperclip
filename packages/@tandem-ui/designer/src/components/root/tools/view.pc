import "../../popover/view.pc" as imp0
import "../../atoms/view.pc" as imp1
import "../../../icons/view.pc" as imp2
import "../../../global.pc" as imp3
import "../../inputs/molecules.pc" as imp4


/**
 * @bounds(left: 197, top: 59, right: 539, bottom: 159)
 */
public component BuildButton {
  script (src: "./build-button-controller.tsx")
  variant building trigger { true }
  variant paused
  render div {
    style {
      box-sizing: border-box
      display: block
      cursor: pointer
    }
    imp0.Popover popover {
      insert anchor {
        div buildButton {
          style extends imp1.defaultBorder {
            box-sizing: border-box
            display: inline-flex
            padding-left: 6px
            padding-top: 4px
            padding-right: 6px
            padding-bottom: 4px
            align-items: center
            background-image: linear-gradient(rgba(200, 200, 200, 0), rgba(200, 200, 200, 0))
          }
          imp2.PlayIcon1 playIcon {
            style {
              display: none
              height: 9px
              color: var(imp3.grey3)
              margin-right: 3px
            }
            style variant paused {
              display: inline-block
            }
          }
          imp2.PauseIcon pauseIcon {
            style {
              display: none
              height: 9px
              color: var(imp3.grey3)
            }
            style variant building {
              display: inline-block
              margin-right: 3px
            }
          }
          text label1 "Build project" {
            style extends imp1.baseFont {
              font-size: 9px
              font-weight: 700
              user-select: none
            }
          }
        }
      }
      insert content {
        imp4.Tooltip tooltip {
          style {
            width: 200px
            padding-right: 12px
          }
          override {
          }
          override contentWrapper {
            style {
              padding-left: 0px
              padding-top: 0px
              padding-right: 0px
              padding-bottom: 0px
            }
          }
          override arrow {
            style {
              left: calc(100% - 50px)
            }
          }
          insert content {
            BuildButtonMenu buildButtonMenu
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 679, top: 33, right: 779, bottom: 133)
 */
public component BuildButtonMenu {
  variant hover trigger { true }
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    slot items {
      BuildButtonOption element1 {
        style {
          box-sizing: border-box
          display: block
        }
      }
      BuildButtonOption element2 {
        style {
          box-sizing: border-box
          display: block
        }
        override {
          variant hover trigger { true }
        }
      }
      BuildButtonOption element3 {
        style {
          box-sizing: border-box
          display: block
        }
      }
    }
  }
}

/**
 * @bounds(left: 789, top: 33, right: 889, bottom: 59)
 */
public component BuildButtonOption {
  variant hover trigger { ":hover" }
  render div {
    style extends imp1.baseFont {
      padding-left: 12px
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
      cursor: pointer
    }
    style variant hover {
      background-image: linear-gradient(var(imp3.grey2), var(imp3.grey2))
    }
    text label "open app" {
      style extends imp1.nowrapEllipsis {
      }
    }
  }
}

