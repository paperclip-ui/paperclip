import "../../../atoms/view.pc" as imp0
import "../../../../global.pc" as imp1


/**
 * @bounds(left: -151, top: 7, right: 714, bottom: 432)
 */
public component BottomGutter {
  script (src: "./controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: flex
      height: 300px
      position: relative
    }
    Console console {
      override {
      }
    }
    div element1 {
      style {
        box-sizing: border-box
        display: block
        position: absolute
        height: 20px
        width: 20px
        right: 0px
        top: 2px
      }
      text closeButton "Ã—" {
        style extends imp0.baseFont {
          cursor: pointer
          display: inline-block
          font-size: 14px
          font-weight: 600
        }
      }
    }
  }
}

/**
 * @bounds(left: 974, top: 93, right: 1883, bottom: 520)
 */
public component Console {
  script (src: "./console-controller.tsx")
  variant noProcesses (enabled: [])
  render div {
    style {
      box-sizing: border-box
      display: flex
      flex-direction: column
      width: 100%
      height: 100%
    }
    div tabBar {
      style {
        box-sizing: border-box
        display: block
        background-image: linear-gradient(var(imp1.grey6), var(imp1.grey6))
        flex-shrink: 0px
      }
      style variant noProcesses {
        display: none
      }
      slot tabs {
        ConsoleTab tab1 {
          override {
            variant selected (enabled: [true])
          }
        }
        ConsoleTab tab
      }
    }
    div element2 {
      style {
        box-sizing: border-box
        display: flex
        height: 100%
        background-image: linear-gradient(var(imp1.grey2), var(imp1.grey2))
        position: relative
      }
      text noProcessesLabel "No running processes" {
        style extends imp0.baseFont {
          display: none
        }
        style variant noProcesses {
          position: absolute
          left: 50%
          top: 50%
          transform: translate(-50%, -50%)
          font-size: 14px
          font-weight: 600
          display: block
        }
      }
      ConsoleLogs consoleLogs
    }
  }
}

/**
 * @bounds(left: 1893, top: 7, right: 1965, bottom: 33)
 */
public component ConsoleTab {
  variant selected (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: inline-block
      padding-left: 12px
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
      background-image: linear-gradient(var(imp1.grey6), var(imp1.grey6))
    }
    style variant selected {
      background-image: linear-gradient(var(imp1.grey2), var(imp1.grey2))
    }
    text label "Console" {
      style extends imp0.baseFont {
      }
    }
  }
}

/**
 * @bounds(left: 1975, top: 7, right: 2884, bottom: 227)
 */
public component ConsoleLogs {
  script (src: "./console-logs-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
      width: 100%
      height: 100%
      overflow: scroll
    }
    slot content {
      ConsoleLog7 consoleLog222
      ConsoleLog7 consoleLog2
      ConsoleLog7 consoleLog3
      ConsoleLog7 consoleLog4 {
        override {
          variant error (enabled: [true])
        }
      }
      ConsoleLog7 consoleLog5 {
        override {
          variant error (enabled: [true])
        }
      }
      ConsoleLog7 consoleLog6
    }
  }
}

/**
 * @bounds(left: 2200, top: 469, right: 3327, bottom: 951)
 */
public component ConsoleLog7 {
  variant error (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: block
      padding-left: 12px
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
    }
    text label1 "log 1" {
      style extends imp0.baseFont {
        word-break: break-word
      }
      style variant error {
        color: var(imp1.red1)
      }
    }
  }
}

