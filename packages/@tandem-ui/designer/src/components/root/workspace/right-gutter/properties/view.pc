import "../../../../pane/view.pc" as imp0
import "../../../../inputs/molecules.pc" as imp1
import "../../../../inputs/textarea/view.pc" as imp2
import "../../../../atoms/view.pc" as imp3
import "../../../../inputs/text/view.pc" as imp4
import "../../../../inputs/dropdown/view.pc" as imp5
import "./input.pc" as imp6
import "../../../../../global.pc" as imp7
import "./frame.pc" as imp8
import "../../../../../icons/view.pc" as imp9
import "./controller-item.pc" as imp10
import "../../../../inputs/button/view.pc" as imp11
import "../../../../inputs/table/view.pc" as imp12


/**
 * @bounds(left: 547, top: 3, right: 809, bottom: 230)
 */
public component TextProperties {
  script (src: "./text-controller.tsx")
  render div {
    style {
      font-size: 10px
    }
    imp0.Pane pane1 {
      style {
        display: flex
        flex-direction: column
      }
      override {
        variant right (enabled: [true])
      }
      override text "Properties"
      insert content2 {
        imp1.LabeledInput {
          override text1 "Text" {
            style {
              color: black
              opacity: 0.4
            }
          }
          override projectNameInput {
            style {
            }
          }
          insert input {
            imp2.Textarea textInput3 {
              style {
                include imp3.baseFont
                display: block
                height: 100px
                resize: none
              }
            }
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 855, top: -132, right: 1264, bottom: 204)
 */
public component ElementProperties {
  script (src: "./element-controller.tsx")
  variant allowTitle (enabled: [])
  render div {
    imp0.Pane pane {
      style {
        display: flex
        flex-direction: column
      }
      override {
        variant right (enabled: [true])
      }
      override text "Properties" {
        style {
        }
      }
      override content {
        style {
          padding-top: 12px
        }
      }
      override title {
        style {
          display: none
        }
      }
      insert content2 {
        imp1.LabeledInput {
          style {
            display: none
          }
          override text1 "Label"
          insert input {
            imp4.TextInput labelInput
          }
        }
        div fields {
          imp1.LabeledInput typeSection {
            override text1 "Element Type"
            insert input {
              imp5.Dropdown elementTypeInput {
                override label2 "Input"
              }
            }
          }
          ImgProperties imgTagProperties
          imp1.LabeledInput labeledInput {
            style {
              display: none
            }
            style variant allowTitle {
              display: block
            }
            override text1 "title"
            insert input {
              imp4.TextInput titleInput
            }
          }
          AProperties aProperties
          imp6.InputProperties inputTagProperties
        }
      }
    }
  }
}

/**
 * @bounds(left: 187, top: -54, right: 469, bottom: 417)
 */
public component Properties {
  script (src: "./properties-controller.tsx")
  variant element2 (enabled: [])
  variant component (enabled: [])
  variant text2 (enabled: [])
  variant slot (enabled: [])
  variant contentNode (enabled: [])
  render div {
    style {
      background: #{imp7.grey2}
    }
    ElementProperties element1 {
      style {
        display: none
      }
      style variant element2 {
        display: block
      }
    }
    imp8.FramePane framePane {
      style {
        display: none
      }
      style variant contentNode {
        display: block
      }
    }
    TextProperties text1 {
      style {
        display: none
      }
      style variant text2 {
        display: block
      }
    }
    ControllersPane controllersPane {
      style {
        display: none
      }
      style variant component {
        display: block
      }
    }
  }
}

/**
 * @bounds(left: 862, top: 302, right: 1217, bottom: 598)
 */
public component ComponentProperties {
  render div {
    style {
      box-sizing: border-box
    }
    ControllersPane
  }
}

/**
 * @bounds(left: 1375, top: 564, right: 1693, bottom: 792)
 */
public component BehaviorPane {
  render div {
    style {
      box-sizing: border-box
    }
    imp0.Pane {
      override text "behavior"
      insert content2 {
        imp1.LabeledInput {
          override text1 "Repeat"
          insert input {
            imp5.Dropdown {
              override label2 "someRepeatableProp"
            }
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 560, top: 454, right: 800, bottom: 684)
 */
public component ControllersPane {
  script (src: "./component-controller.tsx")
  variant hasControllerSelected (enabled: [true])
  variant hasController (enabled: [])
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    override {
      variant alt (enabled: [true])
      variant selected (enabled: [true])
    }
    imp0.Pane {
      override {
        variant right (enabled: [true])
      }
      override text "Controllers"
      override content {
        style {
          padding: 0px
          padding-bottom: 6px
        }
      }
      insert header {
        div element3 {
          style {
            box-sizing: border-box
            display: flex
            justify-content: space-between
            align-items: center
          }
          text text3 "Controllers" {
            style {
              include imp3.headerFontStyle
            }
          }
          div element4 {
            style {
              box-sizing: border-box
              display: flex
              align-items: center
            }
            imp9.TrashIcon2 removeControllerButton {
              style {
                display: none
                height: 1px
                width: 10px
                cursor: pointer
                position: relative
                top: -1px
                margin-right: 4px
              }
              style variant hasControllerSelected {
                display: block
                height: 10px
                margin-right: 10px
              }
              style variant hasController {
                display: block
              }
            }
            imp9.AddIcon addControllerButton {
              style {
                display: block
                height: 9px
                cursor: pointer
                position: relative
                top: -1px
              }
              style variant hasController {
                display: none
              }
            }
          }
        }
      }
      insert content2 {
        slot content {
          imp10.ControllerItem {
            override label "./controller.rb"
          }
          imp10.ControllerItem {
            override {
              variant selected (enabled: [true])
              variant hovering (enabled: [true])
            }
            override label "./controller.view.tsx"
          }
          imp10.ControllerItem {
            override label "./controller.php"
          }
          imp10.ControllerItem {
            override {
              variant hovering (enabled: [true])
            }
            override label "./controller.react.tsx"
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 222, top: 504, right: 455, bottom: 632)
 */
public component ExportsPane {
  script (src: "./exports-controller.tsx")
  render imp0.Pane {
    override text "export"
    insert content2 {
      imp1.LabeledInput {
        override text1 "Name"
        insert input {
          ExportNameInput exportsNameInput {
            style {
              display: block
            }
            override {
            }
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 230, top: 692, right: 544, bottom: 834)
 */
public component ExportNameInput {
  script (src: "./exports-name-input-controller.tsx")
  variant invalid (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: block
      width: unset
      height: unset
      padding-left: unset
      position: relative
    }
    imp4.TextInput input2 {
      style {
        width: 100%
        padding: 4px 8px
        border-radius: 2px
        box-sizing: border-box
        z-index: 3
        position: relative
        color: #{imp7.grey3}
        font-size: unset
        border: 1px solid #{imp7.grey1}
      }
      style variant invalid {
        border: 1px solid rgba(221, 0, 0, 0.5)
      }
    }
    div element5 {
      style {
        box-sizing: border-box
        display: none
        position: absolute
        width: calc(100% + 8px)
        height: calc(100% + 23px)
        left: -4px
        top: -4px
        background: rgba(255, 186, 186, 1)
        font-size: 12px
      }
      style variant invalid {
        display: block
        border-bottom-left-radius: 2px
        border-top-left-radius: 2px
        border-top-right-radius: 2px
        border-bottom-right-radius: 2px
        font-size: 10px
        background: rgba(255, 186, 186, 0.24)
      }
      text error "Error" {
        style {
          position: absolute
          bottom: 2px
          color: rgba(1, 0, 0, 0.31)
          left: 4px
        }
        style variant invalid {
          color: rgba(145, 0, 0, 0.61)
        }
      }
    }
    div element6 {
      style {
        box-sizing: border-box
        display: block
        padding-left: 4px
        padding-top: 4px
        padding-right: 4px
        padding-bottom: 4px
        position: relative
      }
    }
  }
}

/**
 * @bounds(left: 1410, top: 21, right: 1625, bottom: 121)
 */
public component ImgProperties {
  script (src: "./img-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp1.LabeledInput labeledInput2 {
      override text1 "src"
      insert input {
        div element7 {
          style {
            box-sizing: border-box
            display: flex
          }
          imp4.TextInput pathInput1 (placeholder: "../img.png") {
            style {
              margin-right: 8px
            }
          }
          imp11.Button uploadButton {
            override text1 "Browse"
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 1442, top: 207, right: 1717, bottom: 363)
 */
public component AProperties {
  script (src: "./a-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp1.LabeledInput labeledInput4 {
      override text1 "href"
      insert input {
        imp4.TextInput hrefInput (placeholder: "http://website.com/")
      }
    }
  }
}

/**
 * @bounds(left: 215, top: -344, right: 618, bottom: -264)
 */
public component AttributeField {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp1.LabeledInput labeledInput3 {
      insert input {
        slot input {
          TextAttributeInput textInput2
        }
      }
      insert label {
        text text4 "label" {
          style {
            include imp3.labelFont
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 651, top: -577, right: 1064, bottom: -477)
 */
public component BrowseAttributeInput {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    div element8 {
      style {
        box-sizing: border-box
        display: flex
      }
      imp4.TextInput pathInput (placeholder: "../img.png") {
        style {
          margin-right: 8px
        }
      }
      imp11.Button uploadButton2 {
        override text1 "Browse"
      }
    }
  }
}

/**
 * @bounds(left: 203, top: -535, right: 503, bottom: -435)
 */
public component TextAttributeInput {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp4.TextInput textInput
  }
}

/**
 * @bounds(left: 705, top: -438, right: 1184, bottom: -290)
 */
public component TextAreaAttributeInput {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp2.Textarea textarea
  }
}

/**
 * @bounds(left: 1199, top: -579, right: 1299, bottom: -479)
 */
public component DropdownAttributeInput {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp5.Dropdown dropdown
  }
}

/**
 * @bounds(left: -235, top: 19, right: 76, bottom: 240)
 */
div element9 {
  style {
    box-sizing: border-box
    display: block
  }
  imp0.Pane pane2 {
    override {
    }
    override text "Attributes"
    override content {
      style {
        padding-right: 0px
        padding-bottom: 6px
        padding-left: 0px
      }
    }
    insert header {
      div element10 {
        style {
          box-sizing: border-box
          display: flex
          justify-content: space-between
        }
        text text5 "custom attributes" {
          style {
            include imp3.headerFontStyle
          }
        }
        imp9.AddIcon element11 {
          style {
            box-sizing: border-box
            display: block
            height: 9px
          }
        }
      }
    }
    insert content2 {
      imp12.Table table2 {
        override {
          variant noHeader (enabled: [true])
        }
      }
    }
  }
}
/**
 * @bounds(left: -636, top: -48, right: -306, bottom: 277)
 */
imp12.Table table
