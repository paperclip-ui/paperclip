import "../../../../pane/view.pc" as imp0
import "../../../../atoms/view.pc" as imp1
import "../../../../inputs/dropdown/view.pc" as imp2
import "../../../../../icons/view.pc" as imp3
import "../../../../side-panel/view.pc" as imp4
import "../../../../../global.pc" as imp5
import "../../../../inputs/text/view.pc" as imp6
import "../../../../inputs/molecules.pc" as imp7


/**
 * @bounds(left: 318, top: 147, right: 730, bottom: 421)
 */
public component QueriesPane {
  script (src: "./controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp0.Pane pane(text: "Media Queries") {
      override content {
        style {
          padding-top: 6px
          padding-right: 0px
          padding-bottom: 6px
          padding-left: 0px
        }
      }
      override title {
        style {
          padding-bottom: 0px
        }
      }
      insert header {
        div element6 {
          style {
            box-sizing: border-box
            display: flex
            justify-content: space-between
            align-items: center
          }
          text label "Queries" {
            style extends imp1.headerFontStyle {
            }
          }
          div controls {
            style {
              box-sizing: border-box
              display: inline-block
              cursor: pointer
            }
            imp2.Dropdown addQueryDropdown {
              override menu {
                style {
                  box-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.19)
                  min-width: 130px
                }
              }
              insert button {
                imp3.AddIcon addButton {
                  style {
                    height: 9px
                  }
                }
              }
            }
          }
        }
      }
      insert content2 {
        div items2 {
          slot items {
            QueryItem element1
            QueryItem element2
            QueryItem element3
            QueryItem element4
            QueryItem element5
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 753, top: 273, right: 1200, bottom: 391)
 */
public component QueryItem {
  script (src: "./query-item-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: flex
      align-items: center
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
      padding-left: 12px
    }
    imp4.SidePanelButton editButton {
      style {
        display: block
        color: var(imp5.grey3)
        height: 16px
        margin-right: 12px
      }
      insert button {
        imp3.PencilIcon2 pencilIcon2 {
          style {
            display: block
            height: 14px
          }
        }
      }
      insert content4 {
        QueryOptions queryOptions
      }
    }
    imp6.TextInput labelInput (placeholder: "Name")
  }
}

/**
 * @bounds(left: 801, top: 445, right: 1191, bottom: 663)
 */
public component MediaQueryOptions {
  script (src: "./media-query-options-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
      padding-left: 0px
      padding-top: 0px
      padding-right: 0px
      padding-bottom: 0px
    }
    imp7.LabeledInput labeledInput2(text1: "Min Width") {
      insert input {
        imp6.TextInput minWidthInput
      }
    }
    imp7.LabeledInput labeledInput3(text1: "Max Width") {
      insert input {
        imp6.TextInput maxWidthInput
      }
    }
  }
}

/**
 * @bounds(left: 797, top: 700, right: 1186, bottom: 875)
 */
public component VariableQueryOptions {
  script (src: "./variable-query-options-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
      padding-left: 0px
      padding-top: 0px
      padding-right: 0px
      padding-bottom: 0px
    }
    imp7.LabeledInput labeledInput4(text1: "Variable") {
      insert input {
        imp2.Dropdown variableInput(label2: "Some var")
      }
    }
    imp7.LabeledInput labeledInput5(text1: "Equals") {
      insert input {
        imp6.TextInput equalsInput
      }
    }
    imp7.LabeledInput labeledInput6(text1: "Doesn't Equal") {
      insert input {
        imp6.TextInput notEqualsInput
      }
    }
  }
}

/**
 * @bounds(left: 232, top: 596, right: 510, bottom: 873)
 */
public component QueryOptions {
  script (src: "./query-options-controller.tsx")
  variant media (enabled: [])
  variant variable (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: block
      padding-left: 12px
      padding-top: 12px
      padding-right: 12px
      padding-bottom: 12px
    }
    imp7.LabeledInput labeledInput7(text1: "Type") {
      insert input {
        imp2.Dropdown typeInput(label2: "Type")
      }
    }
    MediaQueryOptions mediaQueryOptions {
      style {
        display: none
      }
      style variant media {
        display: block
      }
    }
    VariableQueryOptions variableQueryOptions {
      style {
        display: none
      }
      style variant variable {
        display: block
      }
    }
  }
}

