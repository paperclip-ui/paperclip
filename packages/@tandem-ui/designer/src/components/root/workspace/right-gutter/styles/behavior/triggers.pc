import "../../../../../pane/view.pc" as imp0
import "../../../../../atoms/view.pc" as imp1
import "../../../../../../icons/view.pc" as imp2
import "../../../../../inputs/dropdown/view.pc" as imp3
import "../../../../../../global.pc" as imp4


/**
 * @bounds(left: 96, top: 109, right: 284, bottom: 312)
 */
public component TriggersPane {
  script (src: "./triggers-controller.tsx")
  variant hasTriggers (enabled: [])
  variant hasItemSelected (enabled: [true])
  render imp0.Pane {
    override {
      variant right (enabled: [true])
    }
    override content {
      style {
        padding-right: 0px
        padding-bottom: 6px
        padding-left: 0px
        padding-top: 0px
      }
    }
    insert header {
      div element1 {
        style {
          box-sizing: border-box
          display: flex
          justify-content: space-between
          align-items: center
        }
        style variant hasTriggers {
          flex-shrink: 0
        }
        text text1 "Triggers" {
          style {
            include imp1.headerFontStyle
          }
        }
        div element2 {
          style {
            box-sizing: border-box
            display: block
            cursor: pointer
          }
          style variant hasTriggers {
            flex-shrink: 0
          }
          imp2.TrashIcon2 removeTriggerButton {
            style {
              display: none
            }
            style variant hasItemSelected {
              display: inline-block
              height: 9px
              margin-right: 6px
            }
          }
          imp2.AddIcon addTriggerButton {
            style {
              height: 9px
              display: inline-block
            }
            style variant hasItemSelected {
              display: inline-block
            }
          }
        }
      }
    }
    insert content2 {
      div items {
        slot items2 {
          TriggerItem item {
            override sourceInput.label2 "hover"
            override {
              variant selected (enabled: [hasItemSelected])
            }
            override targetInput.label2 "hovering"
          }
          TriggerItem item2 {
            override targetInput.label2 "focusing"
            override sourceInput.label2 "active"
          }
          TriggerItem item3 {
            override targetInput.label2 "focusing"
            override sourceInput.label2 "variable"
          }
        }
      }
      div footer {
        style {
          box-sizing: border-box
          display: none
          margin-right: 12px
          margin-left: 12px
        }
        style variant hasTriggers {
          display: flex
        }
        text text2 "Action" {
          style {
            include imp1.labelFont
            width: 100%
            text-align: center
          }
        }
        div element3 {
          style {
            box-sizing: border-box
            display: block
            margin-right: 6px
            margin-left: 6px
            width: 9px
            flex-shrink: 0
          }
        }
        text text3 "Variant" {
          style {
            include imp1.labelFont
            text-align: center
            width: 100%
          }
        }
      }
    }
  }
}

/**
 * @bounds(left: 359, top: 122, right: 745, bottom: 172)
 */
public component TriggerItem {
  script (src: "./trigger-item-controller.tsx")
  variant selected (enabled: [])
  render div {
    style {
      box-sizing: border-box
      display: flex
      align-items: center
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
      padding-left: 12px
      position: relative
    }
    style variant selected {
      background: #{imp4.blue1}
    }
    div background {
      style {
        box-sizing: border-box
        display: block
        background: transparent
        width: 100%
        height: 100%
        position: absolute
        left: 0px
      }
    }
    imp3.Dropdown sourceInput {
      override label2 "action"
      override button22 {
        style {
        }
      }
    }
    text text4 "â–º" {
      style {
        display: inline-block
        margin-right: 6px
        margin-left: 6px
        font-size: 9px
        color: #{imp4.grey3}
      }
      style variant selected {
        color: #{imp4.grey0}
      }
    }
    imp3.Dropdown targetInput {
      override label2 "variant"
    }
  }
}

