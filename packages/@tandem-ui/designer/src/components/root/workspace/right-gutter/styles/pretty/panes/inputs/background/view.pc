import "../../../../../../../../../global.pc" as imp0
import "../../../../../../../../atoms/view.pc" as imp1
import "../../../../../../../../../icons/view.pc" as imp2
import "../../../../../../../../inputs/color/picker.pc" as imp3
import "../../../../../../../../inputs/molecules.pc" as imp4
import "../../../../../../../../inputs/file-picker/view.pc" as imp5
import "../../../../../../../../inputs/text/view.pc" as imp6


/**
 * @bounds(left: -204, top: 162, right: 273, bottom: 663)
 */
public component BackgroundPicker {
  script (src: "./controller.tsx")
  variant solid (enabled: [])
  variant linearGradient (enabled: [])
  variant image (enabled: [true])
  render div {
    style extends imp1.defaultBorder {
      box-sizing: border-box
      display: block
      background: var(imp0.grey2)
      width: 250px
      box-shadow: inset 0px 0px 0px 1px var(imp0.blackTransparent2),0px 2px 10px 0px var(imp0.blackTransparent2)
    }
    override solidToggleButton {
      variant selected (enabled: [solid])
    }
    override linearGradientButton {
      variant selected (enabled: [linearGradient])
    }
    override imageToggleButton {
      variant selected (enabled: [image])
    }
    div tabs {
      style {
        box-sizing: border-box
        padding-left: 12px
        padding-top: 6px
        padding-right: 12px
        padding-bottom: 6px
        border-bottom: 1px solid var(imp0.grey1)
      }
      style variant image {
        display: flex
      }
      BackgroundTypeButton solidToggleButton
      BackgroundTypeButton linearGradientButton {
        style {
          display: none
        }
        override {
        }
        override solid {
          style {
            background-image: linear-gradient(#EEE, #999)
          }
        }
      }
      BackgroundTypeButton imageToggleButton {
        style {
          background: rgba(184, 184, 184, 1)
          border-left: 4px none
          border-top: 4px none
          border-right: 4px none
          border-bottom: 4px none
        }
        insert icon {
          div element1 {
            style {
              box-sizing: border-box
              display: block
              position: absolute
              left: 0px
              top: 4px
              width: 100%
              background: var(imp0.grey2)
              height: calc(100% - 8px)
            }
          }
          imp2.ImageIcon imageIcon {
            style {
              display: block
              height: 18px
              width: 18px
              position: absolute
              left: 50%
              top: 50%
              transform: translate(-50%, -50%)
              border-left: 4px none rgba(240, 27, 27, 1)
              border-top: 4px none rgba(240, 27, 27, 1)
              border-right: 4px none rgba(240, 27, 27, 1)
              border-bottom: 4px none rgba(240, 27, 27, 1)
            }
            override node32 {
              style {
                background: var(imp0.grey4)
              }
            }
            override element32111 {
              style {
              }
            }
          }
        }
      }
    }
    SolidColorPicker solidColorPicker {
      style {
        display: none
      }
      style variant solid {
        display: block
      }
      override colorPicker2 {
        style variant solid {
          border-left: 0px none rgba(230, 230, 230, 1)
          border-top: 0px none rgba(230, 230, 230, 1)
          border-right: 0px none rgba(230, 230, 230, 1)
          border-bottom: 0px none rgba(230, 230, 230, 1)
          border-top-left-radius: 0px
          border-top-right-radius: 0px
          border-bottom-left-radius: 0px
          border-bottom-right-radius: 0px
        }
        style {
          border-left: 1px none rgba(230, 230, 230, 1)
          border-top: 1px none rgba(230, 230, 230, 1)
          border-right: 1px none rgba(230, 230, 230, 1)
          border-bottom: 1px none rgba(230, 230, 230, 1)
          border-top-left-radius: 0px
          border-top-right-radius: 0px
          border-bottom-left-radius: 0px
          border-bottom-right-radius: 0px
        }
      }
    }
    LinearGradientPicker linearGradientPicker {
      style {
        display: none
      }
      style variant linearGradient {
        display: block
      }
      override colorPicker {
        style variant linearGradient {
          background: rgba(250, 250, 250, 0)
        }
        style {
          background: transparent
        }
      }
    }
    BackgroundImagePicker backgroundImagePicker {
      style {
        display: none
      }
      style variant image {
        display: block
      }
    }
  }
}

/**
 * @bounds(left: 1112, top: 151, right: 1678, bottom: 859)
 */
public component LinearGradientPicker {
  script (src: "./linear-gradient-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    div controls {
      style {
        box-sizing: border-box
        display: block
        border-bottom: 1px solid var(imp0.grey1)
        padding-left: 12px
        padding-top: 12px
        padding-right: 12px
        padding-bottom: 12px
      }
      div slider {
        style extends imp1.defaultBorder {
          box-sizing: border-box
          display: block
          width: 100%
          height: 12px
          background-image: linear-gradient(to left, black, white)
          border-top-left-radius: 0px
          border-top-right-radius: 0px
          border-bottom-left-radius: 0px
          border-bottom-right-radius: 0px
          position: relative
        }
        ColorStop3 colorStop {
          style {
            box-shadow: inset  0px 0px 0px 1px rgba(1, 1, 1, 0.3), inset  0px 0px 0px 2px rgba(255, 255, 255, 0.3)
          }
        }
        ColorStop3 colorStop2 {
          style extends imp1.defaultBorder {
            box-sizing: border-box
            display: block
            width: 12px
            height: 12px
            left: calc(100% - 12px)
            box-shadow: inset  0px 0px 0px 1px rgba(255, 255, 255, 1)
          }
        }
      }
    }
    imp3.ColorPicker colorPicker {
      style {
        width: 100%
        border-left: 1px none var(imp0.grey1)
        border-top: 1px none var(imp0.grey1)
        border-right: 1px none var(imp0.grey1)
        border-bottom: 1px none var(imp0.grey1)
        border-top-left-radius: 0px
        border-top-right-radius: 0px
        border-bottom-left-radius: 0px
        border-bottom-right-radius: 0px
        background: transparent
        box-shadow: 0px 0px 0px 0px var(imp0.grey4)
        filter: unset
      }
    }
  }
}

/**
 * @bounds(left: 1688, top: 7, right: 1700, bottom: 19)
 */
public component ColorStop3 {
  render div {
    style extends imp1.defaultBorder {
      box-sizing: border-box
      display: block
      width: 12px
      height: 12px
      position: absolute
      box-shadow: inset  0px 0px 0px 1px rgba(255, 255, 255, 1)
      cursor: pointer
    }
  }
}

/**
 * @bounds(left: 1820, top: 183, right: 2450, bottom: 841)
 */
public component SolidColorPicker {
  script (src: "./solid-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp3.ColorPicker colorPicker2 {
      style {
        width: 100%
        background: transparent
        filter: unset
        box-shadow: unset
      }
    }
  }
}

/**
 * @bounds(left: 1319, top: 1185, right: 1734, bottom: 1569)
 */
public component BackgroundImagePicker {
  script (src: "./image-controller.tsx")
  render div {
    style {
      box-sizing: border-box
      display: block
      padding-left: 12px
      padding-top: 12px
      padding-right: 12px
      padding-bottom: 12px
    }
    imp4.LabeledInput labeledInput(text1: "Image") {
      insert input {
        imp5.FileInput fileUriPicker {
          style {
            box-sizing: border-box
            display: flex
          }
        }
      }
    }
    imp4.LabeledInput labeledInput2(text1: "Repeat") {
      insert input {
        imp6.TextInput repeatInput (placeholder: "repeat")
      }
    }
    imp4.LabeledInput labeledInput3(text1: "Position") {
      insert input {
        imp6.TextInput positionInput (placeholder: "top left")
      }
    }
    imp4.LabeledInput labeledInput4(text1: "Size") {
      insert input {
        imp6.TextInput sizeInput (placeholder: "auto")
      }
    }
  }
}

/**
 * @bounds(left: -187, top: 1, right: -87, bottom: 101)
 */
public component BackgroundTypeButton {
  variant selected (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: inline-block
      border-top-left-radius: 99px
      border-top-right-radius: 99px
      border-bottom-left-radius: 99px
      border-bottom-right-radius: 99px
      height: 18px
      overflow: hidden
      width: 18px
      margin-right: 13px
      position: relative
      background: rgba(184, 184, 184, 1)
      cursor: pointer
      box-shadow: 0px 0px 0px 1px var(imp0.grey1)
    }
    style variant selected {
      box-shadow:  0px 0px 0px 3px var(imp0.blue1)
    }
    slot icon {
      div solid {
        style {
          box-sizing: border-box
          display: inline-block
          background: var(imp0.grey4)
          height: 100%
          padding-right: 12px
          z-index: 1px
          width: 100%
        }
      }
    }
    div cover {
      style {
        box-sizing: border-box
        display: block
        position: absolute
        pointer-events: none
        width: 100%
        height: 100%
        left: 0px
        top: 0px
        border-top-left-radius: 99px
        border-top-right-radius: 99px
        border-bottom-left-radius: 99px
        border-bottom-right-radius: 99px
        box-shadow: inset  0px 0px 0px 1px var(imp0.grey2)
      }
    }
  }
}

/**
 * @bounds(left: -138, top: 1695, right: 339, bottom: 2196)
 */
BackgroundPicker backgroundPickerPreview {
  override {
    variant linearGradient (enabled: [true])
  }
}
/**
 * @bounds(left: 398, top: 1079, right: 875, bottom: 1580)
 */
BackgroundPicker backgroundPickerPreview2 {
  override {
    variant image (enabled: [true])
  }
}
/**
 * @bounds(left: -144, top: 1066, right: 333, bottom: 1567)
 */
BackgroundPicker backgroundPickerPreview3 {
  style {
    background: var(imp0.grey2)
  }
  override {
    variant solid (enabled: [true])
  }
}
/**
 * @bounds(left: 568, top: 1689, right: 1814, bottom: 2404)
 */
div preview {
  style {
    box-sizing: border-box
    display: block
  }
  BackgroundPicker backgroundPicker {
    style {
      box-shadow: 0px 2px 10px 0px var(imp0.grey4)
      position: relative
      left: 100px
      top: 100px
    }
    override {
      variant solid (enabled: [true])
    }
  }
}
