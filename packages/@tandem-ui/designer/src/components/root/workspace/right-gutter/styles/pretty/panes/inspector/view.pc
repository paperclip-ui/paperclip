import "../../../../../../../atoms/view.pc" as imp0
import "../../../../../../../../global.pc" as imp1
import "../../../../../../../pane/view.pc" as imp2
import "../../../../../../../../icons/view.pc" as imp3


/**
 * @bounds(left: 614, top: -205, right: 969, bottom: 24)
 */
public component StyleProps {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    StylePropRow element2(text1: "display", text2: "inline-block") {
      override {
        variant isOverride (enabled: [true])
      }
    }
    StylePropRow element3(text1: "font-family", text2: "Helvetica, Arial") {
      override {
        variant alt (enabled: [true])
        variant isOverride (enabled: [true])
      }
    }
    StylePropRow element4(text1: "width", text2: "calc(100% - 10px)") {
      override {
        variant isInherited (enabled: [true])
      }
    }
    StylePropRow element5(text1: "whitespace", text2: "nowrap") {
      override {
        variant alt (enabled: [true])
        variant isVariant (enabled: [true])
      }
    }
    StylePropRow element6(text1: "cursor", text2: "pointer") {
      override {
        variant isVariant (enabled: [true])
      }
    }
    StylePropRow element7(text1: "background", text2: "linear-gradient(#F60, #000)") {
      override {
        variant alt (enabled: [true])
      }
    }
  }
}

/**
 * @bounds(left: 614, top: 144, right: 969, bottom: 194)
 */
public component StylePropRow {
  variant alt (enabled: [])
  variant isOverride (enabled: [])
  variant isVariant (enabled: [])
  variant isInherited (enabled: [true])
  render div {
    style {
      box-sizing: border-box
      display: flex
      padding-left: 12px
      padding-top: 6px
      padding-right: 12px
      padding-bottom: 6px
    }
    style variant alt {
      background-image: linear-gradient(var(imp1.grey2), var(imp1.grey2))
    }
    style variant isVariant {
      color: rgba(65, 111, 243, 1)
    }
    div property {
      style {
        box-sizing: border-box
        display: block
        flex-grow: 1
        flex-shrink: 1
        width: 100%
      }
      text text1 "property" {
        style extends imp0.baseFont {
        }
        style variant isOverride {
          color: rgba(48, 243, 94, 1)
        }
        style variant isVariant {
          color: rgba(164, 91, 243, 1)
        }
        style variant isInherited {
          color: rgba(82, 172, 238, 1)
        }
      }
    }
    div value {
      style {
        box-sizing: border-box
        display: block
        flex-grow: 1
        flex-shrink: 1
        width: 100%
        white-space: nowrap
        overflow: hidden
        text-overflow: ellipsis
      }
      text text2 "value" {
        style extends imp0.baseFont {
        }
      }
    }
  }
}

/**
 * @bounds(left: 979, top: -205, right: 1315, bottom: 335)
 */
public component StyleInspector {
  render div {
    style {
      box-sizing: border-box
      display: block
    }
    imp2.Pane pane(text: "Inspector") {
      override content {
        style {
          padding-right: 0
          padding-bottom: 6px
          padding-left: 0
        }
      }
      insert header {
        div element8 {
          style {
            box-sizing: border-box
            display: flex
            justify-content: space-between
          }
          text text3 "Inspector" {
            style extends imp0.headerFontStyle {
            }
          }
          div element9 {
            style {
              box-sizing: border-box
              display: block
            }
            imp3.AddIcon plusIcon {
              style {
                display: block
                height: 9px
              }
            }
          }
        }
      }
      insert content2 {
        StyleProps styleProps
      }
    }
  }
}

/**
 * @bounds(left: -65, top: -110, right: 271, bottom: 430)
 */
StyleInspector element1
