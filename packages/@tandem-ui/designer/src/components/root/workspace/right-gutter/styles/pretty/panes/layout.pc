import "../../../../../../pane/view.pc" as imp0
import "../../../../../../atoms/view.pc" as imp1
import "../../../../../../../icons/view.pc" as imp2
import "../../../../../../inputs/molecules.pc" as imp3
import "./inputs/view.pc" as imp4


/**
 * @bounds(left: -308, top: 428, right: -38, bottom: 999)
 */
public component Layout {
  script (src: "./layout-controller.tsx")
  render imp0.Pane(text: "Layout") {
    style {
      display: flex
    }
    override {
      variant right trigger { true }
    }
    override title {
      style {
        border-to: 1px solid rgba(0,0,0,0.05)
      }
    }
    override content {
      style {
      }
    }
    insert header {
      div element2 {
        style {
          position: relative
        }
        text text1 "layout" {
          style extends imp1.headerFontStyle {
          }
        }
        imp2.MoreIcon node22131 {
          style {
            user-select: none
            height: 16px
            position: absolute
            right: 0
            opacity: 0.6
            display: none
          }
        }
      }
    }
    insert content2 {
      imp3.LabeledInput(text1: "Display", element1: "Display") {
        insert input {
          imp4.CssDropdownInput displayInput (label2: "Flex")
        }
      }
      div parentFlexboxControls {
        style {
          display: flex
          align-items: center
          width: 100%
          box-sizing: border-box
          flex-direction: column
        }
        imp3.LabeledInput(text1: "Direction") {
          insert input {
            imp4.CssDropdownInput flexDirectionInput (label2: "row")
          }
        }
        div {
          style {
            display: flex
            align-items: center
            width: 100%
            box-sizing: border-box
          }
          imp3.LabeledInput(text1: "Wrap") {
            style {
              width: 100%
              flex: 1
              margin-right: 6px
            }
            insert input {
              imp4.CssDropdownInput flexWrapInput(label2: "nowrap")
            }
          }
          imp3.LabeledInput(text1: "Justify Content") {
            insert input {
              imp4.CssDropdownInput justifyContentInput(label2: "flex-start")
            }
          }
        }
        div {
          style {
            display: flex
            align-items: center
            width: 100%
            box-sizing: border-box
          }
          imp3.LabeledInput(text1: "Align Items") {
            style {
              width: 100%
              flex: 1
              margin-right: 6px
            }
            insert input {
              imp4.CssDropdownInput alignItemsInput(label2: "flex-end")
            }
          }
          imp3.LabeledInput(text1: "Align Content") {
            insert input {
              imp4.CssDropdownInput alignContentInput (label2: "center")
            }
          }
        }
      }
      div childFlexboxControls {
        style {
          display: flex
          align-items: center
          width: 100%
          box-sizing: border-box
          flex-direction: column
        }
        div {
          style {
            display: flex
            align-items: center
            width: 100%
            box-sizing: border-box
          }
          imp3.LabeledInput(text1: "Basis") {
            style {
              width: 100%
              flex: 1
              margin-right: 6px
            }
            override text1 {
              style {
                left: opacity
              }
            }
            insert input {
              imp4.CssMeasurementInput flexBasisInput (placeholder: "0")
            }
          }
          imp3.LabeledInput(text1: "Grow") {
            style {
              width: 100%
              flex: 1
              margin-right: 6px
            }
            insert input {
              imp4.CssMeasurementInput flexGrowInput (placeholder: "0")
            }
          }
          imp3.LabeledInput(text1: "Shrink") {
            style {
              width: 100%
              flex: 1
            }
            insert input {
              imp4.CssMeasurementInput flexShrinkInput (placeholder: "0")
            }
          }
        }
        imp3.LabeledInput(text1: "Align self") {
          insert input {
            imp4.CssDropdownInput alignSelfInput(label2: "auto") {
              style {
                display: inline-block
                width: 100%
              }
            }
          }
        }
      }
      imp3.LabeledInput position(text1: "Position") {
        style {
          display: block
        }
        insert input {
          imp4.CssDropdownInput positionInput(label2: "relative") {
            style {
              display: block
              width: 100%
            }
          }
        }
      }
      div moveControls {
        style {
          display: flex
          align-items: center
          width: 100%
          box-sizing: border-box
        }
        imp3.LabeledInput(text1: "Left") {
          style {
            width: 100%
            flex: 1
            margin-right: 6px
          }
          override text1 {
            style {
              left: opacity
            }
          }
          insert input {
            imp4.CssMeasurementInput leftInput (placeholder: "0px")
          }
        }
        imp3.LabeledInput(text1: "Top") {
          style {
            width: 100%
            flex: 1
          }
          insert input {
            imp4.CssMeasurementInput topInput (placeholder: "0px")
          }
        }
      }
      div sizeControls {
        style {
          display: flex
          align-items: center
          width: 100%
          box-sizing: border-box
        }
        imp3.LabeledInput(text1: "Width") {
          style {
            width: 100%
            flex: 1
            margin-right: 6px
          }
          override text1 {
            style {
              left: opacity
            }
          }
          insert input {
            imp4.CssMeasurementInput widthInput (placeholder: "auto")
          }
        }
        imp3.LabeledInput node1122(text1: "Height") {
          style {
            width: 100%
            flex: 1
          }
          insert input {
            imp4.CssMeasurementInput heightInput (placeholder: "auto")
          }
        }
      }
      imp3.LabeledInput whiteSpace(text1: "White Space") {
        style {
          display: block
        }
        insert input {
          imp4.CssDropdownInput whiteSpaceInput(label2: "nowrap") {
            style {
              display: block
              width: 100%
            }
          }
        }
      }
    }
  }
}

