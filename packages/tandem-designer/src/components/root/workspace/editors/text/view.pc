{
  "id": "53138fe9121",
  "version": "0.0.6",
  "metadata": {},
  "name": "module",
  "children": [
    {
      "label": "Text Preview",
      "is": "div",
      "style": {
        "display": "flex",
        "flex-direction": "column"
      },
      "attributes": {},
      "id": "5c9686b814979",
      "name": "component",
      "children": [
        {
          "id": "5c9686b815472",
          "label": "Banner",
          "is": "div",
          "name": "element",
          "attributes": {},
          "style": {
            "box-sizing": "border-box",
            "display": "flex",
            "align-items": "center",
            "justify-content": "space-between",
            "padding-left": "8px",
            "padding-top": "8px",
            "padding-right": "8px",
            "padding-bottom": "8px",
            "background": "rgba(88, 185, 255, 1)",
            "flex-shrink": "0"
          },
          "children": [
            {
              "id": "5c9686b848542",
              "name": "text",
              "label": "Text",
              "value": "You're viewing this file in read-only mode. ",
              "style": {
                "color": "rgba(255, 255, 255, 1)",
                "font-weight": "600",
                "user-select": "none",
                "cursor": "default"
              },
              "children": [],
              "metadata": {},
              "styleMixins": {
                "dc3b39eb1275": {
                  "priority": 0
                }
              }
            },
            {
              "id": "5c9686b856345",
              "label": "cta",
              "is": "div",
              "name": "element",
              "attributes": {},
              "style": {
                "box-sizing": "border-box",
                "display": "inline-block"
              },
              "children": [
                {
                  "id": "5c9686b857183",
                  "is": "9f364d2139415",
                  "label": "open text editor button",
                  "name": "component-instance",
                  "attributes": {},
                  "style": {
                    "background": "rgba(255, 255, 255, 1)",
                    "white-space": "nowrap"
                  },
                  "children": [
                    {
                      "id": "5c9686b858034",
                      "propertyName": "style",
                      "targetIdPath": [
                        "9f364d2139650"
                      ],
                      "value": {
                        "font-size": "10px",
                        "color": "rgba(88, 185, 255, 1)",
                        "font-weight": "600"
                      },
                      "name": "override",
                      "children": []
                    },
                    {
                      "id": "5c9686b859225",
                      "variantId": null,
                      "propertyName": "text",
                      "targetIdPath": [
                        "9f364d2139650"
                      ],
                      "value": "Open in Text Editor",
                      "name": "override",
                      "children": []
                    }
                  ],
                  "metadata": {
                    "bounds": {
                      "left": 300,
                      "top": 120,
                      "right": 400,
                      "bottom": 220
                    }
                  },
                  "variant": {}
                }
              ],
              "metadata": {}
            }
          ],
          "metadata": {}
        },
        {
          "id": "5c9686b870134",
          "label": "content",
          "is": "div",
          "name": "element",
          "attributes": {},
          "style": {
            "box-sizing": "border-box",
            "display": "block",
            "position": "relative",
            "height": "0",
            "flex-grow": "1",
            "padding-left": "8px",
            "padding-top": "8px",
            "padding-right": "8px",
            "padding-bottom": "8px",
            "word-break": "break-word"
          },
          "children": [
            {
              "id": "5c9686b871035",
              "label": "inner",
              "is": "div",
              "name": "element",
              "attributes": {},
              "style": {
                "box-sizing": "border-box",
                "display": "block",
                "height": "100%",
                "width": "100%",
                "overflow": "scroll"
              },
              "children": [
                {
                  "id": "6abb1348453",
                  "name": "text",
                  "label": "Text",
                  "value": "import \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\n\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\n",
                  "style": {},
                  "children": [],
                  "metadata": {}
                }
              ],
              "metadata": {}
            }
          ],
          "metadata": {}
        }
      ],
      "metadata": {
        "bounds": {
          "left": 0,
          "top": 0,
          "right": 281,
          "bottom": 400
        }
      },
      "variant": {}
    }
  ]
}